{"version":3,"sources":["utils/API.js","pages/Home/Home.js","utils/AUTH.js","pages/Dashboard/Dashboard.js","pages/Backlog/modals/CreateSprint.js","pages/Backlog/modals/CreateTodo.js","pages/Backlog/modals/EditTodo.js","components/TodoListItem/TodoListItem.js","pages/Backlog/Backlog.js","components/TodoCard/TodoCard.js","pages/ActiveSprint/modals/EditTodo.js","pages/ActiveSprint/ActiveSprint.js","components/Header/Header.js","pages/Register/Register.js","pages/Login/Login.js","ProtectedRoute/ProtectedRoute.js","serviceWorker.js","index.js","App.js"],"names":["ping","axios","get","catch","err","getAllTodos","userId","getAllSprints","createTodo","todo","post","updateTodo","put","createSprint","sprint","updateSprint","startSprint","sprintId","getActiveSprint","createEvent","event","getEventsBySprintId","getBurnupData","Home","onClick","API","then","response","console","log","login","user","signup","checkToken","logout","Dashboard","setAuthenticated","useState","sprints","setSprints","labels","datasets","label","data","setData","useEffect","AUTH","res","status","id","sprintsResponse","className","options","responsive","filter","map","_id","name","CreateSprint","isOpen","toggle","addToSprintsList","setActiveSprint","setName","pointsProjection","setPointsProjection","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","type","value","onChange","e","target","placeholder","ModalFooter","Button","color","sprintResponse","CreateTodo","updateTodosList","subject","setSubject","description","setDescription","priority","setPriority","points","setPoints","Row","form","Col","md","todoResponse","EditTodo","sprintsList","setSprint","newTodo","TodoListItem","setTodo","Backlog","setUser","todosList","setTodosList","setSprintsList","activeSprint","createSprintModal","setCreateSprintModal","createTodoModal","setCreateTodoModal","editTodoModal","toggleCreateSprintModal","toggleCreateTodoModal","tempActiveSprint","totalPoints","forEach","parseInt","completedPoints","eventResponse","firstName","lastName","todosResponse","givenTodo","tempTodos","loopTodo","i","unshift","todos","length","Table","hover","key","tempSprints","TodoCard","setStatus","ActiveSprint","redirect","setRedirect","todosTotalPoints","todosCompletedPoints","activeSprintResponse","to","renderRedirect","createdDate","endDate","tempSprint","Date","now","lastUpdateDate","startDate","projectedPoints","active","sprintUpdateResponse","endSprint","Header","authenticated","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","Register","setFirstName","setLastName","username","setUsername","password","setPassword","div","initial","y","animate","transition","duration","data-test","handleSignup","Login","handleLogin","ProtectedRoute","Component","component","path","loading","render","align","Boolean","window","location","hostname","match","ReactDOM","setLoading","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oZAEe,GACbA,KAAM,WACJ,OAAOC,IAAMC,IAAI,aAAaC,OAAM,SAAAC,GAClC,MAAMA,MAGVC,YAAa,SAASC,GACpB,OAAOL,IAAMC,IAAN,0BAA6BI,IAAUH,OAAM,SAAAC,GAClD,MAAMA,MAGVG,cAAe,SAASD,GACtB,OAAOL,IAAMC,IAAN,4BAA+BI,IAAUH,OAAM,SAAAC,GACpD,MAAMA,MAGVI,WAAY,SAASC,GACnB,OAAOR,IAAMS,KAAN,aAAyBD,GAAMN,OAAM,SAAAC,GAC1C,MAAMA,MAGVO,WAAY,SAASF,GACnB,OAAOR,IAAMW,IAAN,aAAwBH,GAAMN,OAAM,SAAAC,GACzC,MAAMA,MAGVS,aAAc,SAASC,GACrB,OAAOb,IAAMS,KAAN,eAA2BI,GAAQX,OAAM,SAAAC,GAC9C,MAAMA,MAGVW,aAAc,SAASD,GACrB,OAAOb,IAAMW,IAAN,eAA0BE,GAAQX,OAAM,SAAAC,GAC7C,MAAMA,MAGVY,YAAa,SAASC,GACpB,OAAOhB,IAAMS,KAAN,wBAAoCO,GAAUd,OAAM,SAAAC,GACzD,MAAMA,MAGVc,gBAAiB,SAASZ,GACxB,OAAOL,IAAMC,IAAN,8BAAiCI,IAAUH,OAAM,SAAAC,GACtD,MAAMA,MAGVe,YAAa,SAASC,GACpB,OAAOnB,IAAMS,KAAN,cAA0BU,GAAOjB,OAAM,SAAAC,GAC5C,MAAMA,MAGViB,oBAAqB,SAASJ,GAC5B,OAAOhB,IAAMC,IAAN,6BAAgCe,IAAYd,OAAM,SAAAC,GACvD,MAAMA,MAGVkB,cAAe,SAASL,GACtB,OAAOhB,IAAMC,IAAN,6BAAgCe,IAAYd,OAAM,SAAAC,GACvD,MAAMA,OCxDG,SAASmB,IAMtB,OACE,6BACE,sDACA,4BAAQC,QAAS,WAPnBC,EAAIzB,OAAO0B,MAAK,SAAAC,GACdC,QAAQC,IAAIF,QAMZ,S,WCXS,GAMbG,MAAO,SAASC,GACd,OAAO9B,IAAMS,KAAK,qBAAsBqB,GAAM5B,OAAM,SAAAC,GAClD,MAAMA,MAIV4B,OAAQ,SAASD,GACf,OAAO9B,IAAMS,KAAK,iBAAkBqB,IAEtCE,WAAY,WACV,OAAOhC,IAAMC,IAAI,oBAAoBC,OAAM,SAAAC,GACzC,MAAMA,MAGV8B,OAAQ,WACN,OAAOjC,IAAMC,IAAI,gBAAgBC,OAAM,SAAAC,GACrC,MAAMA,O,QCjBG,SAAS+B,EAAT,GAA0C,IAArBC,EAAoB,EAApBA,iBAAoB,EAC1BC,mBAAS,IADiB,gCAExBA,mBAAS,KAFe,mBAE/CC,EAF+C,KAEtCC,EAFsC,OAG9BF,mBAAS,CAC/BG,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAClCC,SAAU,CACR,CACEC,MAAO,OACPC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,OAR0B,mBAG/CA,EAH+C,KAGzCC,EAHyC,KAkBtDC,qBAAU,WACRC,EAAKb,aAAaP,MAAK,SAAAqB,GACF,MAAfA,EAAIC,OACNvB,EAAIlB,cAAcwC,EAAIJ,KAAKM,IAAIvB,MAAK,SAAAwB,GAClCX,EAAWW,EAAgBP,SAG7BP,GAAiB,QAIpB,IAmBH,OACE,6BACE,yBAAKe,UAAU,SACb,kBAAC,IAAD,CAGER,KAAMA,EACNS,QAAS,CACPC,YAAY,MAWlB,6BACGf,EACEgB,QAAO,SAAAxC,GAAM,MAAsB,WAAlBA,EAAOkC,UACxBO,KAAI,SAAAzC,GAAM,OACT,yBAAKU,QAAS,kBAxCNyB,EAwCsBnC,EAAO0C,SAvC7C/B,EAAIH,cAAc2B,GAAIvB,MAAK,SAAAC,GACzBC,QAAQC,IAAIF,EAASgB,MAGrBC,EAAQ,CACNJ,OAAQb,EAASgB,KAAKH,OACtBC,SAAU,CACR,CACEC,MAAO,SACPC,KAAMhB,EAASgB,KAAKA,YAVZ,IAAAM,IAwCR,SACSnC,EAAO2C,KADhB,QAC2B3C,EAAO0C,U,mHChE/B,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,OACAC,EAIC,EAJDA,OACAtD,EAGC,EAHDA,OACAuD,EAEC,EAFDA,iBACAC,EACC,EADDA,gBACC,EACuBzB,mBAAS,MADhC,mBACMoB,EADN,KACYM,EADZ,OAE+C1B,mBAAS,MAFxD,mBAEM2B,EAFN,KAEwBC,EAFxB,KAqCD,OACE,kBAACC,EAAA,EAAD,CAAOf,UAAU,WAAWQ,OAAQA,EAAQC,OAAQA,GAClD,kBAACO,EAAA,EAAD,CAAaP,OAAQA,GAArB,iBACA,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,QACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLjB,KAAK,OACLR,GAAG,OACH0B,MAAOlB,EACPmB,SAAU,SAAAC,GAAC,OAAId,EAAQc,EAAEC,OAAOH,QAChCI,YAAY,MAIhB,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,oBAAX,qBACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,mBACH8B,YAAY,GACZJ,MAAOX,EACPY,SAAU,SAAAC,GAAC,OAAIZ,EAAoBY,EAAEC,OAAOH,aAKpD,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAU1D,QAAS,kBAhElB,WACnB,IAAMV,EAAS,CACb2C,OACAO,mBACAjC,KAAMzB,GAERmB,EAAIZ,aAAaC,GAAQY,MAAK,SAAAyD,GACE,MAA1BA,EAAenC,SAGjBa,EAAiBsB,EAAexC,MAChCmB,EAAgBqB,EAAexC,MAC/BiB,QAoDuC/C,KAAvC,UAEU,IACV,kBAACoE,EAAA,EAAD,CAAQC,MAAM,YAAY1D,QAASoC,GAAnC,Y,sBC1EO,SAASwB,EAAT,GAKX,IAJFzB,EAIC,EAJDA,OACAC,EAGC,EAHDA,OACAtD,EAEC,EAFDA,OACA+E,EACC,EADDA,gBACC,EAC6BhD,mBAAS,MADtC,mBACMiD,EADN,KACeC,EADf,OAEqClD,mBAAS,MAF9C,mBAEMmD,EAFN,KAEmBC,EAFnB,OAG+BpD,mBAAS,MAHxC,mBAGMqD,EAHN,KAGgBC,EAHhB,OAI2BtD,mBAAS,MAJpC,mBAIMuD,EAJN,KAIcC,EAJd,KAsBD,OACE,kBAAC3B,EAAA,EAAD,CAAOf,UAAU,WAAWQ,OAAQA,EAAQC,OAAQA,GAClD,kBAACO,EAAA,EAAD,CAAahB,UAAU,WAAWS,OAAQA,GAA1C,eAGA,kBAACQ,EAAA,EAAD,CAAWjB,UAAU,YACnB,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,WACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLjB,KAAK,UACLR,GAAG,UACH0B,MAAOW,EACPV,SAAU,SAAAC,GAAC,OAAIU,EAAWV,EAAEC,OAAOH,QACnCI,YAAY,MAGhB,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CACEC,KAAK,WACLjB,KAAK,OACLR,GAAG,cACH0B,MAAOa,EACPZ,SAAU,SAAAC,GAAC,OAAIY,EAAeZ,EAAEC,OAAOH,WAI3C,kBAACmB,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,WACH0B,MAAOe,EACPd,SAAU,SAAAC,GAAC,OAAIc,EAAYd,EAAEC,OAAOH,SAEpC,0CACA,wCACA,0CAIN,kBAACqB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,UACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,SACH8B,YAAY,GACZJ,MAAOiB,EACPhB,SAAU,SAAAC,GAAC,OAAIgB,EAAUhB,EAAEC,OAAOH,eAO9C,kBAACK,EAAA,EAAD,CAAa7B,UAAU,YACrB,kBAAC8B,EAAA,EAAD,CAAQC,MAAM,UAAU1D,QAAS,kBA/EpB,WACjB,IAAMf,EAAO,CACX6E,UACAE,cACAE,WACAE,SACA7D,KAAMzB,GAERmB,EAAIjB,WAAWC,GAAMiB,MAAK,SAAAwE,GACI,MAAxBA,EAAalD,SACfqC,EAAgBa,EAAavD,MAC7BiB,QAoEuCpD,KAAvC,UAEU,IACV,kBAACyE,EAAA,EAAD,CAAQC,MAAM,YAAY1D,QAASoC,GAAnC,YC/FO,SAASuC,EAAT,GAOX,IANFxC,EAMC,EANDA,OACAC,EAKC,EALDA,OACAtD,EAIC,EAJDA,OACAG,EAGC,EAHDA,KACA2F,EAEC,EAFDA,YACAf,EACC,EADDA,gBACC,EAC6BhD,mBAAS5B,EAAK6E,SAD3C,mBACMA,EADN,KACeC,EADf,OAEqClD,mBAAS5B,EAAK+E,aAFnD,mBAEMA,EAFN,KAEmBC,EAFnB,OAG+BpD,mBAAS5B,EAAKiF,UAH7C,mBAGMA,EAHN,KAGgBC,EAHhB,OAI2BtD,mBAAS5B,EAAKmF,QAJzC,mBAIMA,EAJN,KAIcC,EAJd,OAK2BxD,mBAAS+D,EAAY,GAAG5C,KALnD,mBAKM1C,EALN,KAKcuF,EALd,KAgCD,OACE,kBAACnC,EAAA,EAAD,CAAOP,OAAQA,EAAQC,OAAQ,kBAAMA,EAAO,QAC1C,kBAACO,EAAA,EAAD,CAAaP,OAAQ,kBAAMA,EAAO,QAAlC,aACA,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,WACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLjB,KAAK,UACLR,GAAG,UACH8B,YAAY,GACZJ,MAAOW,EACPV,SAAU,SAAAC,GAAC,OAAIU,EAAWV,EAAEC,OAAOH,WAGvC,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CACEC,KAAK,WACLjB,KAAK,OACLR,GAAG,cACH0B,MAAOa,EACPZ,SAAU,SAAAC,GAAC,OAAIY,EAAeZ,EAAEC,OAAOH,WAG3C,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,WACH0B,MAAOe,EACPd,SAAU,SAAAC,GAAC,OAAIc,EAAYd,EAAEC,OAAOH,SAEpC,wCACA,0CACA,yCAGJ,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,UACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,SACH8B,YAAY,GACZJ,MAAOiB,EACPhB,SAAU,SAAAC,GAAC,OAAIgB,EAAUhB,EAAEC,OAAOH,WAGtC,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,UACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,SACH0B,MAAO7D,EACP8D,SAAU,SAAAC,GAAC,OAAIwB,EAAUxB,EAAEC,OAAOH,SAElC,4BAAQA,MAAO,MAAf,oBACCyB,EAAY7C,KAAI,SAAAzC,GAAM,OACrB,4BACE6D,MAAO7D,EAAO0C,IACdhC,QAAS,kBAAM6E,EAAUvF,EAAO0C,OAE/B1C,EAAO2C,aAOpB,kBAACuB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAU1D,QAAS,kBAnGpB,WACjB,IAAM8E,EAAU,CACdrD,GAAIxC,EAAK+C,IACT8B,UACAZ,KAAMjE,EAAKiE,KACXc,cACAE,WACAE,SACA9E,SACAkC,OAAQ,QACRjB,KAAMzB,GAGRmB,EAAId,WAAW2F,GAAS5E,MAAK,SAAAwE,GACC,MAAxBA,EAAalD,SACfqC,EAAgBa,EAAavD,MAK7BiB,EAAO,UA+EgCjD,KAAvC,QAEU,IACV,kBAACsE,EAAA,EAAD,CAAQC,MAAM,YAAY1D,QAAS,kBAAMoC,EAAO,QAAhD,Y,oBCjIO,SAAS2C,EAAT,GAA0C,IAAlB9F,EAAiB,EAAjBA,KAAM+F,EAAW,EAAXA,QAC3C,OACE,wBAAIrD,UAAU,iBAAiB3B,QAASgF,GACtC,4BAAK/F,EAAKiE,MACV,4BAAKjE,EAAK6E,SACV,4BAAK7E,EAAKiF,UACV,4BAAKjF,EAAKmF,S,8NCKD,SAASa,EAAT,GAAwC,IAArBrE,EAAoB,EAApBA,iBAAoB,EAC5BC,mBAAS,IADmB,mBAC7CN,EAD6C,KACvC2E,EADuC,OAE5BrE,mBAAS,MAFmB,mBAE7C5B,EAF6C,KAEvC+F,EAFuC,OAGlBnE,mBAAS,CAAC,KAHQ,mBAG7CsE,EAH6C,KAGlCC,EAHkC,OAIdvE,mBAAS,CAAC,KAJI,mBAI7C+D,EAJ6C,KAIhCS,EAJgC,OAKZxE,mBAAS,MALG,mBAK7CyE,EAL6C,KAK/BhD,EAL+B,OAQFzB,oBAAS,GARP,mBAQ7C0E,EAR6C,KAQ1BC,EAR0B,OASN3E,oBAAS,GATH,mBAS7C4E,EAT6C,KAS5BC,EAT4B,OAU5B7E,oBAAS,GAA1B8E,EAV6C,oBAY9CC,EAA0B,WAC9BJ,GAAsBD,IAElBM,EAAwB,WAC5BH,GAAoBD,IAGhBjG,EAAc,WAClB,IAAIsG,E,yVAAgB,IAAQR,GAC5BQ,EAAiBtE,OAAS,aAC1BvB,EAAIT,YAAY,CAAEwC,IAAK8D,EAAiB9D,MAAO9B,MAAK,SAAAyD,GAClDrB,EAAgBwD,GAEhB,IAAIC,EAAc,EAClBZ,EAAUa,SAAQ,SAAA/G,GACZA,EAAKK,SAAWgG,EAAatD,MAC/B+D,GAAeE,SAAShH,EAAKmF,YAIjC,IAAMxE,EAAQ,CACZsD,KAAM,iBACNgD,gBAAiB,EACjBH,YAAaA,EACbzG,OAAQgG,EAAatD,KAEvB/B,EAAIN,YAAYC,GAAOM,MAAK,SAAAiG,GAC1B/F,QAAQC,IAAI8F,EAAchF,aAKhCE,qBAAU,WAERC,EAAKb,aAAaP,MAAK,SAAAqB,GACF,MAAfA,EAAIC,QACN0D,EAAQ,CACNkB,UAAW7E,EAAIJ,KAAKiF,UACpBC,SAAU9E,EAAIJ,KAAKkF,SACnB5E,GAAIF,EAAIJ,KAAKM,KAGfxB,EAAIpB,YAAY0C,EAAIJ,KAAKM,IAAIvB,MAAK,SAAAoG,GAChClB,EAAakB,EAAcnF,MAC3BlB,EAAIlB,cAAcwC,EAAIJ,KAAKM,IAAIvB,MAAK,SAAAwB,GAClCA,EAAgBP,KAAK6E,SAAQ,SAAA1G,GAEP,WAAlBA,EAAOkC,QACW,eAAlBlC,EAAOkC,QAEPc,EAAgBhD,MAGpB+F,EAAe3D,EAAgBP,cAInCP,GAAiB,GACjBsE,EAAQ,UAIX,IAEH,IAAMrB,EAAkB,SAAA0C,GACtB,IAAMC,EAAS,YAAOrB,GAClBL,GAAU,EAEd0B,EAAUR,SAAQ,SAACS,EAAUC,GACvBD,EAASzE,MAAQuE,EAAUvE,MAC7BwE,EAAUE,GAAKH,EACfzB,GAAU,MAGVA,GACF0B,EAAUG,QAAQJ,GAEpBnB,EAAaoB,IASf,OACE,yBAAK7E,UAAU,wBACb,yBAAKA,UAAU,gCAaf,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,sBACM,OAAjB2D,EACC,kDAEA,iDAAuBA,EAAarD,OAGtB,OAAjBqD,GACyB,WAAxBA,EAAa9D,QACiB,IAA9B8D,EAAasB,MAAMC,QACjB,4BACE7G,QAAS,kBAAMR,KACfmC,UAAU,qBACVF,GAAG,uBAHL,gBAQc,OAAjB6D,GACC,4BACE7D,GAAG,uBACHE,UAAU,2BACV3B,QAAS,kBAAM4F,MAHjB,kBASJ,yBAAKjE,UAAU,kCACI,MAAhB2D,GACCH,EAAUrD,QAAO,SAAA7C,GAAI,OAAIA,EAAKK,SAAWgG,EAAatD,QACpD,yBAAKL,UAAU,wBACb,kBAACmF,EAAA,EAAD,CAAOjF,YAAU,EAACkF,OAAK,GACrB,+BACG5B,EACErD,QAAO,SAAA7C,GAAI,OAAIA,EAAKK,SAAWgG,EAAatD,OAC5CD,KAAI,SAAC9C,EAAMyH,GAAP,OACH,kBAAC3B,EAAD,CACE9F,KAAMA,EACN+H,IAAKN,EACL1B,QAAS,kBAAMA,EAAQ/F,cAW3C,yBAAK0C,UAAU,mBACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,uBAAd,YACY,IACTwD,EAAUrD,QAAO,SAAA7C,GAAI,MAAoB,YAAhBA,EAAKuC,UAAsBqF,OAFvD,UAIA,4BACEpF,GAAG,qBACHzB,QAAS,kBAAM6F,MAFjB,gBAOF,yBAAKlE,UAAU,mCACb,yBAAKA,UAAU,yBACb,kBAACmF,EAAA,EAAD,CAAOjF,YAAU,EAACkF,OAAK,GACrB,+BACG5B,EACErD,QAAO,SAAA7C,GAAI,MAAoB,YAAhBA,EAAKuC,UACpBO,KAAI,SAAC9C,EAAMyH,GAAP,OACH,kBAAC3B,EAAD,CACE9F,KAAMA,EACN+H,IAAKN,EACL1B,QAAS,kBAAMA,EAAQ/F,cAQtCwG,GACC,kBAAC7B,EAAD,CACEzB,OAAQsD,EACRrD,OAAQyD,EACR/G,OAAQyB,EAAKkB,GACboC,gBAAiBA,IAGpB5E,GACC,kBAAC0F,EAAD,CACExC,OAAQwD,EACRvD,OAAQ4C,EACRlG,OAAQyB,EAAKkB,GACbxC,KAAMA,EACN4E,gBAAiBA,EACjBe,YAAaA,IAGhBW,GACC,kBAACrD,EAAD,CACEC,OAAQoD,EACRnD,OAAQwD,EACR9G,OAAQyB,EAAKkB,GACba,gBAAiBA,EACjBD,iBAjIiB,SAAA/C,GACvB,IAAM2H,EAAW,YAAOrC,GACxBqC,EAAYN,QAAQrH,GACpB+F,EAAe4B,O,cC1GJ,SAASC,EAAT,GAAsC,IAAlBjI,EAAiB,EAAjBA,KAAM+F,EAAW,EAAXA,QACvC,OACE,yBAAKrD,UAAU,qBACb,yBAAKA,UAAU,yBAAyB3B,QAASgF,GAC/C,4BAAK/F,EAAK6E,UAEZ,yBAAKnC,UAAU,4BACb,uBAAGA,UAAU,yBAAb,WAA8C1C,EAAKmF,QACnD,uBAAGzC,UAAU,yBAAb,aAAgD1C,EAAKiF,YCG9C,SAASS,EAAT,GASX,IARFxC,EAQC,EARDA,OACAC,EAOC,EAPDA,OACAtD,EAMC,EANDA,OACAG,EAKC,EALDA,KACAQ,EAIC,EAJDA,SACAsG,EAGC,EAHDA,YACAG,EAEC,EAFDA,gBAEC,EAC6BrF,mBAAS5B,EAAK6E,SAD3C,mBACMA,EADN,KACeC,EADf,OAEqClD,mBAAS5B,EAAK+E,aAFnD,mBAEMA,EAFN,KAEmBC,EAFnB,OAG+BpD,mBAAS5B,EAAKiF,UAH7C,mBAGMA,EAHN,KAGgBC,EAHhB,OAI2BtD,mBAAS5B,EAAKmF,QAJzC,mBAIMA,EAJN,KAIcC,EAJd,OAK2BxD,mBAAS5B,EAAKuC,QALzC,mBAKMA,EALN,KAKc2F,EALd,OAMgBtG,mBAASpB,GAAnBH,EANN,oBA+CD,OACE,kBAACoD,EAAA,EAAD,CAAOP,OAAQA,EAAQC,OAAQ,kBAAMA,EAAO,QAC1C,kBAACO,EAAA,EAAD,CAAaP,OAAQ,kBAAMA,EAAO,QAAlC,aACA,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,WACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLjB,KAAK,UACLR,GAAG,UACH8B,YAAY,GACZJ,MAAOW,EACPV,SAAU,SAAAC,GAAC,OAAIU,EAAWV,EAAEC,OAAOH,WAGvC,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,EAAA,EAAD,CACEC,KAAK,WACLjB,KAAK,OACLR,GAAG,cACH0B,MAAOa,EACPZ,SAAU,SAAAC,GAAC,OAAIY,EAAeZ,EAAEC,OAAOH,WAG3C,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,WACH0B,MAAOe,EACPd,SAAU,SAAAC,GAAC,OAAIc,EAAYd,EAAEC,OAAOH,SAEpC,wCACA,0CACA,yCAGJ,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,UACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,SACH8B,YAAY,GACZJ,MAAOiB,EACPhB,SAAU,SAAAC,GAAC,OAAIgB,EAAUhB,EAAEC,OAAOH,WAGtC,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,UACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLjB,KAAK,SACLR,GAAG,SACH0B,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAI8D,EAAU9D,EAAEC,OAAOH,SAElC,iDACA,4BAAQA,MAAM,QAAQnD,QAAS,SAAAqD,GAAC,OAAI8D,EAAU9D,EAAEC,OAAOH,SAAvD,SAGA,4BAAQA,MAAM,UAAUnD,QAAS,SAAAqD,GAAC,OAAI8D,EAAU9D,EAAEC,OAAOH,SAAzD,WAGA,4BACEA,MAAM,YACNnD,QAAS,SAAAqD,GAAC,OAAI8D,EAAU9D,EAAEC,OAAOH,SAFnC,aAdF,UAyBN,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAU1D,QAAS,kBAtHpB,WACjB,IAAM8E,EAAU,CACdrD,GAAIxC,EAAK+C,IACT8B,UACAZ,KAAMjE,EAAKiE,KACXc,cACAE,WACAE,SACA9E,SACAiB,KAAMzB,EACN0C,UAGFvB,EAAId,WAAW2F,GAAS5E,MAAK,SAAAwE,GAC3B,GAA4B,MAAxBA,EAAalD,OAAgB,CAO/B,IACM5B,EAAQ,CACZsD,KAAM,iBACNgD,gBAHuBD,SAASC,GAAmBD,SAAS7B,GAI5D2B,YAAaA,EACbzG,OAAQA,GAEK,cAAXkC,GACFvB,EAAIN,YAAYC,GAAOM,MAAK,SAAAiG,GAC1B/F,QAAQC,IAAI8F,EAAchF,SAI9BiB,EAAO,UAoFgCjD,KAAvC,QAEU,IACV,kBAACsE,EAAA,EAAD,CAAQC,MAAM,YAAY1D,QAAS,kBAAMoC,EAAO,QAAhD,Y,YChJO,SAASgF,EAAT,GAA6C,IAArBxG,EAAoB,EAApBA,iBAAoB,EACjCC,mBAAS,IADwB,mBAClDN,EADkD,KAC5C2E,EAD4C,OAEjCrE,mBAAS,MAFwB,mBAElD5B,EAFkD,KAE5C+F,EAF4C,OAGvBnE,mBAAS,IAHc,mBAGlDsE,EAHkD,KAGvCC,EAHuC,OAI7BvE,mBAAS,IAJoB,mBAIlDvB,EAJkD,KAI1CuF,EAJ0C,OAKzBhE,oBAAS,GALgB,mBAKlDwG,EALkD,KAKxCC,EALwC,KAOrDC,EAAmB,EACnBC,EAAuB,EAE3BrC,EAAUa,SAAQ,SAAA/G,GACI,cAAhBA,EAAKuC,SACPgG,GAAwBvB,SAAShH,EAAKmF,SAExCmD,GAAoBtB,SAAShH,EAAKmF,WAdqB,MAkBjCvD,oBAAS,GAA1B8E,EAlBkD,oBAmFzD,OA1BAtE,qBAAU,WAERC,EAAKb,aAAaP,MAAK,SAAAqB,GACF,MAAfA,EAAIC,QACN0D,EAAQ,CACNkB,UAAW7E,EAAIJ,KAAKiF,UACpBC,SAAU9E,EAAIJ,KAAKkF,SACnB5E,GAAIF,EAAIJ,KAAKM,KAGfxB,EAAIP,gBAAgB6B,EAAIJ,KAAKM,IAAIvB,MAAK,SAAAuH,GAChCA,EAAqBtG,KAAK,KAC5B0D,EAAU4C,EAAqBtG,KAAK,IACpCiE,EAAaqC,EAAqBtG,KAAK,GAAGyF,aAM9ChG,GAAiB,GACjBsE,EAAQ,UAIX,CAACjG,IAGF,6BAhEqB,WACrB,GAAIoI,EACF,OAAO,kBAAC,IAAD,CAAUK,GAAG,aA+DnBC,GAED,yBAAKhG,UAAU,gCACb,wBAAIA,UAAU,6BACXrC,EAAO2C,KAAM,IACd,0BAAMN,UAAU,SACd,4BACGrC,EAAOsI,aAAe,aADzB,KACyC,IACtCtI,EAAOuI,SAAW,cAGnB,IACN,wBAAIlG,UAAU,oCACX6F,EADH,IAC0BD,EAD1B,qBAEM,IACN,4BACE5F,UAAU,4BACVF,GAAG,oBACHzB,QAAS,kBA7EC,WAChB,IAAM8H,EAAa,CAEjBtG,OAAQ,OACRqG,QAASE,KAAKC,MACdzH,KAAMjB,EAAOiB,KACb0B,KAAM3C,EAAO2C,KACb2F,YAAatI,EAAOsI,YACpBK,eAAgBF,KAAKC,MACrBE,UAAW5I,EAAO4I,UAClBC,gBAAiBZ,EACjBrB,gBAAiBsB,EACjBY,QAAQ,EACRpG,IAAK1C,EAAO0C,KAEd/B,EAAIV,aAAauI,GAAY5H,MAAK,SAAAmI,GAChCjI,QAAQC,IAAI,0BAA4BgI,GACxCf,GAAY,GAEZ,IAAM1H,EAAQ,CACZsD,KAAM,eACNgD,gBAAiBsB,EACjBzB,YAAawB,EACbjI,OAAQA,GAEVW,EAAIN,YAAYC,GAAOM,MAAK,SAAAiG,GAC1B/F,QAAQC,IAAI8F,EAAchF,YAmDTmH,KAHjB,eAQF,yBAAK3G,UAAU,mBACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,oBAAd,UAEF,yBAAKA,UAAU,0BACZwD,EACErD,QAAO,SAAA7C,GAAI,MAAoB,UAAhBA,EAAKuC,UACpBO,KAAI,SAAA9C,GAAI,OACP,kBAACiI,EAAD,CAAUjI,KAAMA,EAAM+F,QAAS,kBAAMA,EAAQ/F,WAIrD,yBAAK0C,UAAU,8BACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,oBAAd,YAEF,yBAAKA,UAAU,0BACZwD,EACErD,QAAO,SAAA7C,GAAI,MAAoB,YAAhBA,EAAKuC,UACpBO,KAAI,SAAA9C,GAAI,OACP,kBAACiI,EAAD,CAAUjI,KAAMA,EAAM+F,QAAS,kBAAMA,EAAQ/F,WAIrD,yBAAK0C,UAAU,8BACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,oBAAd,cAEF,yBAAKA,UAAU,gCACZwD,EACErD,QAAO,SAAA7C,GAAI,MAAoB,cAAhBA,EAAKuC,UACpBO,KAAI,SAAA9C,GAAI,OACP,kBAACiI,EAAD,CAAUjI,KAAMA,EAAM+F,QAAS,kBAAMA,EAAQ/F,YAMtDA,GACC,kBAAC,EAAD,CACEkD,OAAQwD,EACRvD,OAAQ4C,EACRlG,OAAQyB,EAAKkB,GACbxC,KAAMA,EACNQ,SAAUH,EAAO0C,IACjB+D,YAAawB,EACbrB,gBAAiBsB,M,sHClJd,SAASe,EAAT,GAA+D,IAA7CC,EAA4C,EAA5CA,cAAe5H,EAA6B,EAA7BA,iBAAkBsE,EAAW,EAAXA,QAAW,EAC/CrE,oBAAS,GADsC,mBACpEsB,EADoE,KAC5DsG,EAD4D,OAExD5H,oBAAS,GAArBwG,EAFoE,oBAsB3E,OACE,yBAAK1F,UAAU,SAjBM,WACrB,GAAI0F,EACF,OAAO,kBAAC,IAAD,CAAUK,GAAG,MAgBnBC,GACD,kBAACe,EAAA,EAAD,CAAQhF,MAAM,QAAQiF,OAAK,EAACC,OAAO,MACjC,kBAACC,EAAA,EAAD,CAAalH,UAAU,WAAWmH,KAAK,KAAvC,eAGA,kBAACC,EAAA,EAAD,CAAe/I,QAzBN,kBAAMyI,GAAWtG,MA0B1B,kBAAC6G,EAAA,EAAD,CAAU7G,OAAQA,EAAQ8G,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKvH,UAAU,UAAUsH,QAAM,IAC3BT,GACA,kBAAC,IAAD,CAAMd,GAAG,aACP,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASzH,UAAU,YAAnB,eAIJ6G,GACA,kBAAC,IAAD,CAAMd,GAAG,UACP,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASzH,UAAU,YAAnB,WAKL6G,GACC,kBAACa,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACC,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,EAAC9H,UAAU,YAApC,QAGA,kBAAC+H,EAAA,EAAD,CAAcC,OAAK,GACjB,kBAAC,IAAD,CAAMjC,GAAG,cACP,kBAACkC,EAAA,EAAD,CAAcjI,UAAU,YAAxB,cAEF,kBAAC,IAAD,CAAM+F,GAAG,YACP,kBAACkC,EAAA,EAAD,CAAcjI,UAAU,YAAxB,YAEF,kBAAC,IAAD,CAAM+F,GAAG,iBACP,kBAACkC,EAAA,EAAD,CAAcjI,UAAU,YAAxB,kBAIF,kBAACiI,EAAA,EAAD,CAAcC,SAAO,IACrB,kBAAC,IAAD,CAAMnC,GAAG,KACP,kBAACkC,EAAA,EAAD,CAAc5J,QAAS,WArDvCsB,EAAKZ,SAASR,MAAK,SAAAqB,GACE,MAAfA,EAAIC,SACNpB,QAAQC,IAAI,cACZO,GAAiB,GACjBsE,EAAQ,SAiD2CvD,UAAU,YAAjD,iB,mBC9EL,SAASmI,EAAT,GAAyC,IAArBlJ,EAAoB,EAApBA,iBAAoB,EACnBC,mBAAS,IADU,mBAC9CuF,EAD8C,KACnC2D,EADmC,OAErBlJ,mBAAS,IAFY,mBAE9CwF,EAF8C,KAEpC2D,EAFoC,OAGrBnJ,mBAAS,IAHY,mBAG9CoJ,EAH8C,KAGpCC,EAHoC,OAIrBrJ,mBAAS,IAJY,mBAI9CsJ,EAJ8C,KAIpCC,EAJoC,OAKrBvJ,oBAAS,GALY,mBAK9CwG,EAL8C,KAKpCC,EALoC,KAsBrD,OACE,kBAAC,IAAO+C,IAAR,CACEC,QAAS,CAAEC,EAAG,KACdC,QAAS,CAAED,EAAG,GACdE,WAAY,CAAEC,SAAU,GACxB/I,UAAU,UApBS,WACrB,GAAI0F,EACF,OAAO,kBAAC,IAAD,CAAUK,GAAG,eAoBnBC,GACD,wBAAIhG,UAAU,cAAcgJ,YAAU,iBAAtC,UAIA,yBAAKhJ,UAAU,gBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAd,cACA,2BACEF,GAAG,aACHE,UAAU,aAEVM,KAAK,YACL0I,YAAU,0BACVvH,SAAU,SAAAC,GAAC,OAAI0G,EAAa1G,EAAEC,OAAOH,WAIzC,yBAAKxB,UAAU,gBACb,wBAAIA,UAAU,cAAd,aACA,2BACEF,GAAG,YACHE,UAAU,aAEVM,KAAK,WACL0I,YAAU,yBACVvH,SAAU,SAAAC,GAAC,OAAI2G,EAAY3G,EAAEC,OAAOH,WAIxC,yBAAKxB,UAAU,gBACb,wBAAIA,UAAU,cAAd,YACA,2BACEF,GAAG,WACHE,UAAU,aAEVM,KAAK,WACL0I,YAAU,wBACVvH,SAAU,SAAAC,GAAC,OAAI6G,EAAY7G,EAAEC,OAAOH,WAIxC,yBAAKxB,UAAU,gBACb,wBAAIA,UAAU,cAAd,YACA,2BACEF,GAAG,WACHE,UAAU,aAEVM,KAAK,WACLiB,KAAK,WACLyH,YAAU,wBACVvH,SAAU,SAAAC,GAAC,OAAI+G,EAAY/G,EAAEC,OAAOH,WAIxC,4BACEwH,YAAU,uBACVlJ,GAAG,gBACHE,UAAU,+BACV3B,QAAS,kBA3EI,WACnB,IAAMO,EAAO,CAAE6F,YAAWC,WAAU4D,WAAUE,YAC9C7I,EAAKd,OAAOD,GAAML,MAAK,SAAAqB,GACF,MAAfA,EAAIC,SACNZ,GAAiB,GACjB0G,GAAY,OAsEKsD,KAJjB,UAQA,uBAAGjJ,UAAU,gBAAb,qBACqB,IACnB,kBAAC,IAAD,CAAM+F,GAAG,SAASiD,YAAU,sBAAsBlJ,GAAG,gBAArD,Y,OC9FK,SAASoJ,GAAT,GAAoD,EAAnCrC,cAAoC,IAArB5H,EAAoB,EAApBA,iBAAoB,EACjCC,mBAAS,IADwB,mBAC1DoJ,EAD0D,KAChDC,EADgD,OAEjCrJ,mBAAS,IAFwB,mBAE1DsJ,EAF0D,KAEhDC,EAFgD,OAGjCvJ,oBAAS,GAHwB,mBAG1DwG,EAH0D,KAGhDC,EAHgD,KAqBjE,OACE,kBAAC,IAAO+C,IAAR,CACE1I,UAAU,QACV2I,QAAS,CAAEC,EAAG,KACdC,QAAS,CAAED,EAAG,GACdE,WAAY,CAAEC,SAAU,IAXL,WACrB,GAAIrD,EACF,OAAO,kBAAC,IAAD,CAAUK,GAAG,eAWnBC,GAED,wBAAIhG,UAAU,cAAcgJ,YAAU,gBAAtC,SAGA,yBAAKhJ,UAAU,gBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAd,YACA,2BACEF,GAAG,WACHE,UAAU,aAEVM,KAAK,WACL0I,YAAU,uBACVvH,SAAU,SAAAC,GAAC,OAAI6G,EAAY7G,EAAEC,OAAOH,WAGxC,yBAAKxB,UAAU,gBACb,wBAAIA,UAAU,cAAd,YACA,2BACEF,GAAG,WAEHE,UAAU,aACVM,KAAK,WACLiB,KAAK,WACLyH,YAAU,uBACVvH,SAAU,SAAAC,GAAC,OAAI+G,EAAY/G,EAAEC,OAAOH,WAGxC,4BACEwH,YAAU,sBACVlJ,GAAG,eACHE,UAAU,2CACV3B,QAAS,kBAxDG,WAClB,IAAMO,EAAO,CAAE0J,WAAUE,YACzB7I,EAAKhB,MAAMC,GAAML,MAAK,SAAAqB,GACD,MAAfA,EAAIC,SACNZ,GAAiB,GACjB0G,GAAY,OAmDKwD,KAJjB,UAQA,uBAAGnJ,UAAU,gBAAb,sBACsB,IACpB,kBAAC,IAAD,CACE+F,GAAG,YACHiD,YAAU,sBACVlJ,GAAG,iBAHL,eCtEK,SAASsJ,GAAT,GAMX,IALSC,EAKV,EALDC,UACAC,EAIC,EAJDA,KACAC,EAGC,EAHDA,QACA3C,EAEC,EAFDA,cACA5H,EACC,EADDA,iBAEA,OACE,kBAAC,IAAD,CACEsK,KAAMA,EACNE,OAAQ,WACN,OAAID,EAAgB,wBAAIE,MAAO,UAAX,yBACf7C,EASH,kBAACwC,EAAD,CACExC,cAAeA,EACf5H,iBAAkBA,IATlB,0DAC4B,kBAAC,IAAD,CAAM8G,GAAG,UAAT,SAD5B,MAC8D,IAC5D,kBAAC,IAAD,CAAMA,GAAG,aAAT,gBCPM4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OAAO,mBCMD,WAAgB,IAAD,EACcvK,oBAAS,GADvB,mBACrB2H,EADqB,KACN5H,EADM,OAEEC,oBAAS,GAFX,mBAErBsK,EAFqB,KAEZS,EAFY,OAGJ/K,mBAAS,IAHL,mBAGrBN,EAHqB,KAGf2E,EAHe,KA0B5B,OALA7D,qBAAU,WAfRC,EAAKb,aAAaP,MAAK,SAAAqB,GACF,MAAfA,EAAIC,QACNZ,GAAiB,GACjBsE,EAAQ,CACNkB,UAAW7E,EAAIJ,KAAKiF,UACpBC,SAAU9E,EAAIJ,KAAKkF,SACnB5E,GAAIF,EAAIJ,KAAKM,OAGfb,GAAiB,GACjBsE,EAAQ,QAOZ0G,GAAW,KACV,IAGD,kBAAC,IAAD,KACE,6BACE,kBAACrD,EAAD,CACEC,cAAeA,EACf5H,iBAAkBA,EAClBsE,QAASA,IAGX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2G,OAAK,EAACX,KAAK,KAChB,kBAACnL,EAAD,CACEyI,cAAeA,EACf5H,iBAAkBA,KAGtB,kBAACmK,GAAD,CACEG,KAAK,aACL3K,KAAMA,EACN2E,QAASA,EACT+F,UAAWtK,EACX6H,cAAeA,EACf5H,iBAAkBA,EAClBuK,QAASA,EACTS,WAAYA,IAEd,kBAACb,GAAD,CACEG,KAAK,WACLD,UAAWhG,EACX1E,KAAMA,EACNiI,cAAeA,EACf5H,iBAAkBA,EAClBuK,QAASA,EACTS,WAAYA,IAEd,kBAACb,GAAD,CACEG,KAAK,gBACLD,UAAW7D,EACX7G,KAAMA,EACNiI,cAAeA,EACf5H,iBAAkBA,EAClBuK,QAASA,EACTS,WAAYA,IAEd,kBAAC,IAAD,CAAOV,KAAK,aACV,kBAACpB,EAAD,CACEtB,cAAeA,EACf5H,iBAAkBA,KAGtB,kBAAC,IAAD,CAAOsK,KAAK,UACV,kBAACL,GAAD,CACErC,cAAeA,EACf5H,iBAAkBA,UDrFhB,MAASkL,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhM,MAAK,SAAAiM,GACjCA,EAAaC,iB","file":"static/js/main.fb210049.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  ping: function() {\n    return axios.get(\"/api/ping\").catch(err => {\n      throw err;\n    });\n  },\n  getAllTodos: function(userId) {\n    return axios.get(`/api/todos/user/${userId}`).catch(err => {\n      throw err;\n    });\n  },\n  getAllSprints: function(userId) {\n    return axios.get(`/api/sprints/user/${userId}`).catch(err => {\n      throw err;\n    });\n  },\n  createTodo: function(todo) {\n    return axios.post(`/api/todos`, todo).catch(err => {\n      throw err;\n    });\n  },\n  updateTodo: function(todo) {\n    return axios.put(`/api/todos`, todo).catch(err => {\n      throw err;\n    });\n  },\n  createSprint: function(sprint) {\n    return axios.post(`/api/sprints`, sprint).catch(err => {\n      throw err;\n    });\n  },\n  updateSprint: function(sprint) {\n    return axios.put(`/api/sprints`, sprint).catch(err => {\n      throw err;\n    });\n  },\n  startSprint: function(sprintId) {\n    return axios.post(`/api/sprints/activate`, sprintId).catch(err => {\n      throw err;\n    });\n  },\n  getActiveSprint: function(userId) {\n    return axios.get(`/api/sprints/active/${userId}`).catch(err => {\n      throw err;\n    });\n  },\n  createEvent: function(event) {\n    return axios.post(`/api/events`, event).catch(err => {\n      throw err;\n    });\n  },\n  getEventsBySprintId: function(sprintId) {\n    return axios.get(`/api/events/sprint/${sprintId}`).catch(err => {\n      throw err;\n    });\n  },\n  getBurnupData: function(sprintId) {\n    return axios.get(`/api/events/burnup/${sprintId}`).catch(err => {\n      throw err;\n    });\n  }\n};\n","import React from \"react\";\nimport \"./style.css\";\nimport API from \"../../utils/API.js\";\n\nexport default function Home() {\n  const ping = () => {\n    API.ping().then(response => {\n      console.log(response);\n    });\n  };\n  return (\n    <div>\n      <p> put starter info here </p>\n      <button onClick={() => ping()}>Ping</button>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport default {\n  // Logs the user out\n  //   logout: function() {\n  //     localStorage.clear();\n  //   },\n  // Log the user in\n  login: function(user) {\n    return axios.post(\"/auth/authenticate\", user).catch(err => {\n      throw err;\n    });\n  },\n  // New user registration\n  signup: function(user) {\n    return axios.post(\"/auth/register\", user);\n  },\n  checkToken: function() {\n    return axios.get(\"/auth/checkToken\").catch(err => {\n      throw err;\n    });\n  },\n  logout: function() {\n    return axios.get(\"/auth/logout\").catch(err => {\n      throw err;\n    });\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport AUTH from \"../../utils/AUTH\";\nimport API from \"../../utils/API\";\n// import Moment from \"react-moment\";\nimport { Line } from \"react-chartjs-2\";\n\nexport default function Dashboard({ setAuthenticated }) {\n  const [events, setEvents] = useState([]);\n  const [sprints, setSprints] = useState([]);\n  const [data, setData] = useState({\n    labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n    datasets: [\n      {\n        label: \"Burn\",\n        data: [0, 2, 2, 3, 3, 5]\n      }\n      // ,\n      // {\n      //   label: \"Guideline\",\n      //   data: [0, 1, 2, 3, 4, 5]\n      // }\n    ]\n  });\n\n  useEffect(() => {\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        API.getAllSprints(res.data.id).then(sprintsResponse => {\n          setSprints(sprintsResponse.data);\n        });\n      } else {\n        setAuthenticated(false);\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const getBurnup = id => {\n    API.getBurnupData(id).then(response => {\n      console.log(response.data);\n      // response.data;\n      let dataValues = [];\n      setData({\n        labels: response.data.labels,\n        datasets: [\n          {\n            label: \"Burnup\",\n            data: response.data.data\n          }\n        ]\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"chart\">\n        <Line\n          // datasets={[10, 20, 30, 40, 50, 60]}\n          // labels={[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"]}\n          data={data}\n          options={{\n            responsive: true\n            // maintainAspectRatio: false,\n            // scales: {\n            //   yAxes: [{ ticks: { beginAtZero: true } }],\n            //   xAxes: [{ ticks: { beginAtZero: true } }]\n            // }\n          }}\n          // width=\"100px\"\n          // height=\"100px\"\n        />\n      </div>\n      <div>\n        {sprints\n          .filter(sprint => sprint.status !== \"active\")\n          .map(sprint => (\n            <div onClick={() => getBurnup(sprint._id)}>\n              Name: {sprint.name} ID: {sprint._id}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function CreateSprint({\n  isOpen,\n  toggle,\n  userId,\n  addToSprintsList,\n  setActiveSprint\n}) {\n  const [name, setName] = useState(null);\n  const [pointsProjection, setPointsProjection] = useState(null);\n\n  const createSprint = () => {\n    const sprint = {\n      name,\n      pointsProjection,\n      user: userId\n    };\n    API.createSprint(sprint).then(sprintResponse => {\n      if (sprintResponse.status === 200) {\n        // updateTodosList(todoResponse.data); this works\n        // console.log(\"sprint response data: \" + sprintResponse.data.active);\n        addToSprintsList(sprintResponse.data);\n        setActiveSprint(sprintResponse.data);\n        toggle();\n      }\n    });\n  };\n  // const createSprint = () => {\n  // const todo = {\n  //   subject,\n  //   description,\n  //   priority,\n  //   points,\n  //   user: userId\n  // };\n  // API.createTodo(todo).then(todoResponse => {\n  //   if (todoResponse.status === 200) {\n  //     updateTodosList(todoResponse.data);\n  //     toggle();\n  //   }\n  // });\n  //   console.log(\"createSrint\");\n  // };\n\n  return (\n    <Modal className=\"my-modal\" isOpen={isOpen} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Create Sprint</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              placeholder=\"\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"pointsProjection\">Points Projection</Label>\n            <Input\n              type=\"number\"\n              name=\"number\"\n              id=\"pointsProjection\"\n              placeholder=\"\"\n              value={pointsProjection}\n              onChange={e => setPointsProjection(e.target.value)}\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={() => createSprint()}>\n          Submit\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./style.css\";\n// import AUTH from \"../../utils/AUTH\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function CreateTodo({\n  isOpen,\n  toggle,\n  userId,\n  updateTodosList\n}) {\n  const [subject, setSubject] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [priority, setPriority] = useState(null);\n  const [points, setPoints] = useState(null);\n\n  const createTodo = () => {\n    const todo = {\n      subject,\n      description,\n      priority,\n      points,\n      user: userId\n    };\n    API.createTodo(todo).then(todoResponse => {\n      if (todoResponse.status === 200) {\n        updateTodosList(todoResponse.data);\n        toggle();\n      }\n    });\n  };\n\n  return (\n    <Modal className=\"my-modal\" isOpen={isOpen} toggle={toggle}>\n      <ModalHeader className=\"my-modal\" toggle={toggle}>\n        Create Todo\n      </ModalHeader>\n      <ModalBody className=\"my-modal\">\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Subject</Label>\n            <Input\n              type=\"text\"\n              name=\"subject\"\n              id=\"subject\"\n              value={subject}\n              onChange={e => setSubject(e.target.value)}\n              placeholder=\"\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"description\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </FormGroup>\n\n          <Row form>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"priority\">Priority</Label>\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"priority\"\n                  value={priority}\n                  onChange={e => setPriority(e.target.value)}\n                >\n                  <option>Medium</option>\n                  <option>High</option>\n                  <option>Low</option>\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md={1}>\n              <FormGroup>\n                <Label for=\"points\">Points</Label>\n                <Input\n                  type=\"number\"\n                  name=\"number\"\n                  id=\"points\"\n                  placeholder=\"\"\n                  value={points}\n                  onChange={e => setPoints(e.target.value)}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </ModalBody>\n      <ModalFooter className=\"my-modal\">\n        <Button color=\"primary\" onClick={() => createTodo()}>\n          Submit\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\n// import \"./style.css\";\n// import AUTH from \"../../utils/AUTH\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function EditTodo({\n  isOpen,\n  toggle,\n  userId,\n  todo,\n  sprintsList,\n  updateTodosList\n}) {\n  const [subject, setSubject] = useState(todo.subject);\n  const [description, setDescription] = useState(todo.description);\n  const [priority, setPriority] = useState(todo.priority);\n  const [points, setPoints] = useState(todo.points);\n  const [sprint, setSprint] = useState(sprintsList[0]._id);\n\n  const updateTodo = () => {\n    const newTodo = {\n      id: todo._id,\n      subject,\n      type: todo.type,\n      description,\n      priority,\n      points,\n      sprint,\n      status: \"ready\",\n      user: userId\n    };\n\n    API.updateTodo(newTodo).then(todoResponse => {\n      if (todoResponse.status === 200) {\n        updateTodosList(todoResponse.data);\n        //make api call to insert the todo id into the todos array on the sprint if the sprint is there\n        // ***********************************\n        // *********************************\n        // what if i do this on the backend in the update todo controller\n        toggle(null);\n      }\n    });\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={() => toggle(null)}>\n      <ModalHeader toggle={() => toggle(null)}>Edit Todo</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Subject</Label>\n            <Input\n              type=\"text\"\n              name=\"subject\"\n              id=\"subject\"\n              placeholder=\"\"\n              value={subject}\n              onChange={e => setSubject(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"description\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"priority\">Priority</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"priority\"\n              value={priority}\n              onChange={e => setPriority(e.target.value)}\n            >\n              <option>High</option>\n              <option>Medium</option>\n              <option>Low</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"points\">Points</Label>\n            <Input\n              type=\"number\"\n              name=\"number\"\n              id=\"points\"\n              placeholder=\"\"\n              value={points}\n              onChange={e => setPoints(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"sprint\">Sprint</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"sprint\"\n              value={sprint}\n              onChange={e => setSprint(e.target.value)}\n            >\n              <option value={null}>Add to sprint...</option>\n              {sprintsList.map(sprint => (\n                <option\n                  value={sprint._id}\n                  onClick={() => setSprint(sprint._id)}\n                >\n                  {sprint.name}\n                </option>\n              ))}\n            </Input>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={() => updateTodo()}>\n          Save\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={() => toggle(null)}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import \"./style.css\";\nimport React from \"react\";\n\nexport default function TodoListItem({ todo, setTodo }) {\n  return (\n    <tr className=\"todo-list-item\" onClick={setTodo}>\n      <td>{todo.type}</td>\n      <td>{todo.subject}</td>\n      <td>{todo.priority}</td>\n      <td>{todo.points}</td>\n    </tr>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport AUTH from \"../../utils/AUTH\";\nimport API from \"../../utils/API.js\";\nimport CreateSprint from \"./modals/CreateSprint\";\nimport CreateTodo from \"./modals/CreateTodo\";\nimport EditTodo from \"./modals/EditTodo\";\nimport { Table } from \"reactstrap\";\nimport TodoListItem from \"../../components/TodoListItem/TodoListItem\";\n\n// need to chop some of this up and put a useEffect that updates especially the active sprint whenver\n// a todo is update.  so whenever the todos list changes, the active sprint should be recalled for\n\n// ^ disregard, just need to update the sprint itself iwth the todo id whenever a todo is updated\nexport default function Backlog({ setAuthenticated }) {\n  const [user, setUser] = useState({});\n  const [todo, setTodo] = useState(null);\n  const [todosList, setTodosList] = useState([{}]);\n  const [sprintsList, setSprintsList] = useState([{}]);\n  const [activeSprint, setActiveSprint] = useState(null);\n\n  //Modals\n  const [createSprintModal, setCreateSprintModal] = useState(false);\n  const [createTodoModal, setCreateTodoModal] = useState(false);\n  const [editTodoModal] = useState(true);\n\n  const toggleCreateSprintModal = () => {\n    setCreateSprintModal(!createSprintModal);\n  };\n  const toggleCreateTodoModal = () => {\n    setCreateTodoModal(!createTodoModal);\n  };\n\n  const startSprint = () => {\n    let tempActiveSprint = { ...activeSprint };\n    tempActiveSprint.status = \"inProgress\";\n    API.startSprint({ _id: tempActiveSprint._id }).then(sprintResponse => {\n      setActiveSprint(tempActiveSprint);\n\n      let totalPoints = 0;\n      todosList.forEach(todo => {\n        if (todo.sprint === activeSprint._id) {\n          totalPoints += parseInt(todo.points);\n        }\n      });\n\n      const event = {\n        type: \"sprint started\",\n        completedPoints: 0,\n        totalPoints: totalPoints,\n        sprint: activeSprint._id\n      };\n      API.createEvent(event).then(eventResponse => {\n        console.log(eventResponse.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    //First make a call to get userId to get respective todos\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        setUser({\n          firstName: res.data.firstName,\n          lastName: res.data.lastName,\n          id: res.data.id\n        });\n        // with the userId set, get all the todos for the user\n        API.getAllTodos(res.data.id).then(todosResponse => {\n          setTodosList(todosResponse.data);\n          API.getAllSprints(res.data.id).then(sprintsResponse => {\n            sprintsResponse.data.forEach(sprint => {\n              if (\n                sprint.status === \"active\" ||\n                sprint.status === \"inProgress\"\n              ) {\n                setActiveSprint(sprint);\n              }\n            });\n            setSprintsList(sprintsResponse.data);\n          });\n        });\n      } else {\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const updateTodosList = givenTodo => {\n    const tempTodos = [...todosList];\n    let newTodo = true;\n\n    tempTodos.forEach((loopTodo, i) => {\n      if (loopTodo._id === givenTodo._id) {\n        tempTodos[i] = givenTodo;\n        newTodo = false;\n      }\n    });\n    if (newTodo) {\n      tempTodos.unshift(givenTodo);\n    }\n    setTodosList(tempTodos);\n  };\n\n  const addToSprintsList = sprint => {\n    const tempSprints = [...sprintsList];\n    tempSprints.unshift(sprint);\n    setSprintsList(tempSprints);\n  };\n\n  return (\n    <div className=\"backlog-page-wrapper\">\n      <div className=\"backlog-page-header-wrapper\">\n        {/* {!activeSprint && (\n          <button\n            id=\"create-sprint-button\"\n            className=\"backlog-page-header-item\"\n            onClick={() => toggleCreateSprintModal()}\n          >\n            Create Sprint\n          </button>\n        )} */}\n      </div>\n\n      {/* {activeSprint && ( */}\n      <div className=\"sprint-wrapper\">\n        <div className=\"sprint-header-wrapper\">\n          <h6 className=\"sprint-header-item\">\n            {activeSprint === null ? (\n              <span>No Active Sprint</span>\n            ) : (\n              <span>Active Sprint - {activeSprint.name}</span>\n            )}\n          </h6>\n          {activeSprint !== null &&\n            activeSprint.status === \"active\" &&\n            activeSprint.todos.length !== 0 && (\n              <button\n                onClick={() => startSprint()}\n                className=\"sprint-header-item\"\n                id=\"sprint-start-button\"\n              >\n                Start Sprint\n              </button>\n            )}\n          {activeSprint === null && (\n            <button\n              id=\"create-sprint-button\"\n              className=\"backlog-page-header-item\"\n              onClick={() => toggleCreateSprintModal()}\n            >\n              Create Sprint\n            </button>\n          )}\n        </div>\n        <div className=\"sprint-body-wrapper todos-list\">\n          {activeSprint != null &&\n            todosList.filter(todo => todo.sprint === activeSprint._id) && (\n              <div className=\"sprint-table-wrapper\">\n                <Table responsive hover>\n                  <tbody>\n                    {todosList\n                      .filter(todo => todo.sprint === activeSprint._id)\n                      .map((todo, i) => (\n                        <TodoListItem\n                          todo={todo}\n                          key={i}\n                          setTodo={() => setTodo(todo)}\n                        />\n                      ))}\n                  </tbody>\n                </Table>\n              </div>\n            )}\n        </div>\n      </div>\n      {/* )} */}\n\n      <div className=\"backlog-wrapper\">\n        <div className=\"backlog-header-wrapper\">\n          <h6 className=\"backlog-header-item\">\n            Backlog -{\" \"}\n            {todosList.filter(todo => todo.status === \"backlog\").length} Todos\n          </h6>\n          <button\n            id=\"create-todo-button\"\n            onClick={() => toggleCreateTodoModal()}\n          >\n            Create Todo\n          </button>\n        </div>\n        <div className=\"backlog-body-wrapper todos-list\">\n          <div className=\"backlog-table-wrapper\">\n            <Table responsive hover>\n              <tbody>\n                {todosList\n                  .filter(todo => todo.status === \"backlog\")\n                  .map((todo, i) => (\n                    <TodoListItem\n                      todo={todo}\n                      key={i}\n                      setTodo={() => setTodo(todo)}\n                    />\n                  ))}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n      {createTodoModal && (\n        <CreateTodo\n          isOpen={createTodoModal}\n          toggle={toggleCreateTodoModal}\n          userId={user.id}\n          updateTodosList={updateTodosList}\n        />\n      )}\n      {todo && (\n        <EditTodo\n          isOpen={editTodoModal}\n          toggle={setTodo}\n          userId={user.id}\n          todo={todo}\n          updateTodosList={updateTodosList}\n          sprintsList={sprintsList}\n        />\n      )}\n      {createSprintModal && (\n        <CreateSprint\n          isOpen={createSprintModal}\n          toggle={toggleCreateSprintModal}\n          userId={user.id}\n          setActiveSprint={setActiveSprint}\n          addToSprintsList={addToSprintsList}\n        />\n      )}\n    </div>\n  );\n}\n","import \"./style.css\";\nimport React from \"react\";\n\nexport default function TodoCard({ todo, setTodo }) {\n  return (\n    <div className=\"todo-card-wrapper\">\n      <div className=\"todo-card-body-wrapper\" onClick={setTodo}>\n        <h5>{todo.subject}</h5>\n      </div>\n      <div className=\"todo-card-footer-wrapper\">\n        <p className=\"todo-card-footer-item\">Points: {todo.points}</p>\n        <p className=\"todo-card-footer-item\">Priority: {todo.priority}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function EditTodo({\n  isOpen,\n  toggle,\n  userId,\n  todo,\n  sprintId,\n  totalPoints,\n  completedPoints\n  // updateTodosList\n}) {\n  const [subject, setSubject] = useState(todo.subject);\n  const [description, setDescription] = useState(todo.description);\n  const [priority, setPriority] = useState(todo.priority);\n  const [points, setPoints] = useState(todo.points);\n  const [status, setStatus] = useState(todo.status);\n  const [sprint] = useState(sprintId);\n\n  const updateTodo = () => {\n    const newTodo = {\n      id: todo._id,\n      subject,\n      type: todo.type,\n      description,\n      priority,\n      points,\n      sprint,\n      user: userId,\n      status\n    };\n\n    API.updateTodo(newTodo).then(todoResponse => {\n      if (todoResponse.status === 200) {\n        // updateTodosList(todoResponse.data);\n        //make api call to insert the todo id into the todos array on the sprint if the sprint is there\n        // ***********************************\n        // *********************************\n        // what if i do this on the backend in the update todo controller\n\n        let newCompletedPoints = parseInt(completedPoints) + parseInt(points);\n        const event = {\n          type: \"todo completed\",\n          completedPoints: newCompletedPoints,\n          totalPoints: totalPoints,\n          sprint: sprint\n        };\n        if (status === \"completed\") {\n          API.createEvent(event).then(eventResponse => {\n            console.log(eventResponse.data);\n          });\n        }\n\n        toggle(null);\n      }\n    });\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={() => toggle(null)}>\n      <ModalHeader toggle={() => toggle(null)}>Edit Todo</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Subject</Label>\n            <Input\n              type=\"text\"\n              name=\"subject\"\n              id=\"subject\"\n              placeholder=\"\"\n              value={subject}\n              onChange={e => setSubject(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"description\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"priority\">Priority</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"priority\"\n              value={priority}\n              onChange={e => setPriority(e.target.value)}\n            >\n              <option>High</option>\n              <option>Medium</option>\n              <option>Low</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"points\">Points</Label>\n            <Input\n              type=\"number\"\n              name=\"number\"\n              id=\"points\"\n              placeholder=\"\"\n              value={points}\n              onChange={e => setPoints(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"status\">Status</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"status\"\n              value={status}\n              onChange={e => setStatus(e.target.value)}\n            >\n              <option>Select status</option>\n              <option value=\"ready\" onClick={e => setStatus(e.target.value)}>\n                Ready\n              </option>\n              <option value=\"working\" onClick={e => setStatus(e.target.value)}>\n                Working\n              </option>\n              <option\n                value=\"completed\"\n                onClick={e => setStatus(e.target.value)}\n              >\n                Completed\n              </option>\n              ))}\n            </Input>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={() => updateTodo()}>\n          Save\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={() => toggle(null)}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport AUTH from \"../../utils/AUTH\";\nimport API from \"../../utils/API\";\nimport TodoCard from \"../../components/TodoCard/TodoCard\";\nimport EditTodo from \"./modals/EditTodo\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default function ActiveSprint({ setAuthenticated }) {\n  const [user, setUser] = useState({});\n  const [todo, setTodo] = useState(null);\n  const [todosList, setTodosList] = useState([]);\n  const [sprint, setSprint] = useState({});\n  const [redirect, setRedirect] = useState(false);\n\n  let todosTotalPoints = 0;\n  let todosCompletedPoints = 0;\n\n  todosList.forEach(todo => {\n    if (todo.status === \"completed\") {\n      todosCompletedPoints += parseInt(todo.points);\n    }\n    todosTotalPoints += parseInt(todo.points);\n  });\n\n  //modal\n  const [editTodoModal] = useState(true);\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/backlog\" />;\n    }\n  };\n\n  const endSprint = () => {\n    const tempSprint = {\n      // todos: [],\n      status: \"done\",\n      endDate: Date.now(),\n      user: sprint.user,\n      name: sprint.name,\n      createdDate: sprint.createdDate,\n      lastUpdateDate: Date.now(),\n      startDate: sprint.startDate,\n      projectedPoints: todosTotalPoints,\n      completedPoints: todosCompletedPoints,\n      active: false,\n      _id: sprint._id\n    };\n    API.updateSprint(tempSprint).then(sprintUpdateResponse => {\n      console.log(\"sprint update response \" + sprintUpdateResponse);\n      setRedirect(true);\n\n      const event = {\n        type: \"sprint ended\",\n        completedPoints: todosCompletedPoints,\n        totalPoints: todosTotalPoints,\n        sprint: sprint\n      };\n      API.createEvent(event).then(eventResponse => {\n        console.log(eventResponse.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    //First make a call to get userId to get respective todos\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        setUser({\n          firstName: res.data.firstName,\n          lastName: res.data.lastName,\n          id: res.data.id\n        });\n        // with the userId set, get all the todos for the user\n        API.getActiveSprint(res.data.id).then(activeSprintResponse => {\n          if (activeSprintResponse.data[0]) {\n            setSprint(activeSprintResponse.data[0]);\n            setTodosList(activeSprintResponse.data[0].todos);\n          }\n        });\n        //need to get all todos in the active sprint and put them in one Todos list, and render them in swim lanes based on status\n        // whenever the state of the todoslist is updated, rerender the swim lanes\n      } else {\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n    // eslint-disable-next-line\n  }, [todo]);\n\n  return (\n    <div>\n      {renderRedirect()}\n      {/* <h1>ActiveSprint</h1> */}\n      <div className=\"active-sprint-header-wrapper\">\n        <h5 className=\"active-sprint-header-item\">\n          {sprint.name}{\" \"}\n          <span className=\"dates\">\n            <em>\n              {sprint.createdDate || \"start date\"} -{\" \"}\n              {sprint.endDate || \"end date\"}\n            </em>\n          </span>\n        </h5>{\" \"}\n        <h5 className=\"active-sprint-header-item points\">\n          {todosCompletedPoints}/{todosTotalPoints} points completed\n        </h5>{\" \"}\n        <button\n          className=\"active-sprint-header-item\"\n          id=\"end-sprint-button\"\n          onClick={() => endSprint()}\n        >\n          End Sprint\n        </button>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"swim-lanes-wrapper row\">\n          <div className=\"swim-lane-wrapper col-md-4\">\n            <div className=\"swim-lane-header-wrapper\">\n              <h5 className=\"swim-lane-header\">Ready</h5>\n            </div>\n            <div className=\"swim-lane-body-wrapper\">\n              {todosList\n                .filter(todo => todo.status === \"ready\")\n                .map(todo => (\n                  <TodoCard todo={todo} setTodo={() => setTodo(todo)} />\n                ))}\n            </div>\n          </div>\n          <div className=\"swim-lane-wrapper col-md-4\">\n            <div className=\"swim-lane-header-wrapper\">\n              <h5 className=\"swim-lane-header\">Working</h5>\n            </div>\n            <div className=\"swim-lane-body-wrapper\">\n              {todosList\n                .filter(todo => todo.status === \"working\")\n                .map(todo => (\n                  <TodoCard todo={todo} setTodo={() => setTodo(todo)} />\n                ))}\n            </div>\n          </div>\n          <div className=\"swim-lane-wrapper col-md-4\">\n            <div className=\"swim-lane-header-wrapper\">\n              <h5 className=\"swim-lane-header\">Completed</h5>\n            </div>\n            <div className=\"swim-lane-body-wrapper other\">\n              {todosList\n                .filter(todo => todo.status === \"completed\")\n                .map(todo => (\n                  <TodoCard todo={todo} setTodo={() => setTodo(todo)} />\n                ))}\n            </div>\n          </div>\n        </div>\n\n        {todo && (\n          <EditTodo\n            isOpen={editTodoModal}\n            toggle={setTodo}\n            userId={user.id}\n            todo={todo}\n            sprintId={sprint._id}\n            totalPoints={todosTotalPoints}\n            completedPoints={todosCompletedPoints}\n            // updateTodosList={updateTodosList}\n            // sprintsList={sprintsList}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import \"./style.css\";\nimport React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport AUTH from \"../../utils/AUTH\";\n\nexport default function Header({ authenticated, setAuthenticated, setUser }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [redirect] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const logout = () => {\n    AUTH.logout().then(res => {\n      if (res.status === 200) {\n        console.log(\"logged out\");\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n  };\n\n  return (\n    <div className=\"mynav\">\n      {renderRedirect()}\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand className=\"nav-text\" href=\"/\">\n          Agile Todos\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {!authenticated && (\n              <Link to=\"/register\">\n                <NavItem>\n                  <NavLink className=\"nav-text\">Register</NavLink>\n                </NavItem>\n              </Link>\n            )}\n            {!authenticated && (\n              <Link to=\"/login\">\n                <NavItem>\n                  <NavLink className=\"nav-text\">Login</NavLink>\n                </NavItem>\n              </Link>\n            )}\n\n            {authenticated && (\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret className=\"nav-text\">\n                  Menu\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <Link to=\"/dashboard\">\n                    <DropdownItem className=\"nav-text\">Dashboard</DropdownItem>\n                  </Link>\n                  <Link to=\"/backlog\">\n                    <DropdownItem className=\"nav-text\">Backlog</DropdownItem>\n                  </Link>\n                  <Link to=\"/activesprint\">\n                    <DropdownItem className=\"nav-text\">\n                      Active Sprint\n                    </DropdownItem>\n                  </Link>\n                  <DropdownItem divider />\n                  <Link to=\"/\">\n                    <DropdownItem onClick={() => logout()} className=\"nav-text\">\n                      Logout\n                    </DropdownItem>\n                  </Link>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            )}\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport AUTH from \"../../utils/AUTH\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport \"./style.css\";\n\nexport default function Register({ setAuthenticated }) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n  };\n\n  const handleSignup = () => {\n    const user = { firstName, lastName, username, password };\n    AUTH.signup(user).then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n        setRedirect(true);\n      }\n    });\n  };\n  return (\n    <motion.div\n      initial={{ y: 1000 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 1 }}\n      className=\"Signup\"\n    >\n      {renderRedirect()}\n      <h3 className=\"form-header\" data-test=\"signup-header\">\n        Signup\n      </h3>\n\n      <div className=\"form-wrapper\">\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">First Name</h6>\n          <input\n            id=\"first-name\"\n            className=\"form-input\"\n            // placeholder=\"First Name\"\n            name=\"firstName\"\n            data-test=\"signup-input-first-name\"\n            onChange={e => setFirstName(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Last Name</h6>\n          <input\n            id=\"last-name\"\n            className=\"form-input\"\n            // placeholder=\"Last Name\"\n            name=\"lastName\"\n            data-test=\"signup-input-last-name\"\n            onChange={e => setLastName(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Username</h6>\n          <input\n            id=\"username\"\n            className=\"form-input\"\n            // placeholder=\"Email/Username\"\n            name=\"username\"\n            data-test=\"signup-input-username\"\n            onChange={e => setUsername(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Password</h6>\n          <input\n            id=\"password\"\n            className=\"form-input\"\n            // placeholder=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            data-test=\"signup-input-password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n\n        <button\n          data-test=\"signup-submit-button\"\n          id=\"submit-button\"\n          className=\"form-options btn btn-primary\"\n          onClick={() => handleSignup()}\n        >\n          Submit\n        </button>\n        <p className=\"form-options\">\n          Already signed up?{\" \"}\n          <Link to=\"/login\" data-test=\"signup-login-button\" id=\"login-button\">\n            Login\n          </Link>\n        </p>\n      </div>\n    </motion.div>\n  );\n}\n","import React, { useState } from \"react\";\nimport AUTH from \"../../utils/AUTH\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport \"./style.css\";\n\nexport default function Login({ authenticated, setAuthenticated }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleLogin = () => {\n    const user = { username, password };\n    AUTH.login(user).then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n        setRedirect(true);\n      }\n    });\n  };\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n  };\n\n  return (\n    <motion.div\n      className=\"Login\"\n      initial={{ y: 1000 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 1 }}\n    >\n      {renderRedirect()}\n\n      <h3 className=\"form-header\" data-test=\"login-header\">\n        Login\n      </h3>\n      <div className=\"form-wrapper\">\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Username</h6>\n          <input\n            id=\"username\"\n            className=\"form-input\"\n            // placeholder=\"email/username\"\n            name=\"username\"\n            data-test=\"login-input-username\"\n            onChange={e => setUsername(e.target.value)}\n          />\n        </div>\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Password</h6>\n          <input\n            id=\"password\"\n            // placeholder=\"password\"\n            className=\"form-input\"\n            name=\"password\"\n            type=\"password\"\n            data-test=\"login-input-password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n        <button\n          data-test=\"login-submit-button\"\n          id=\"login-button\"\n          className=\"form-button form-options btn btn-primary\"\n          onClick={() => handleLogin()}\n        >\n          Submit\n        </button>\n        <p className=\"form-options\">\n          Not registered yet?{\" \"}\n          <Link\n            to=\"/register\"\n            data-test=\"login-signup-button\"\n            id=\"signup-button\"\n          >\n            Register\n          </Link>\n        </p>\n        {/* <button\n        data-test=\"login-signup-button\"\n        id=\"signup-button\"\n        className=\"authentication options btn btn-secondary\"\n      >\n        Signup\n      </button> */}\n      </div>\n    </motion.div>\n  );\n}\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nexport default function ProtectedRoute({\n  component: Component,\n  path,\n  loading,\n  authenticated,\n  setAuthenticated\n}) {\n  return (\n    <Route\n      path={path}\n      render={() => {\n        if (loading) return <h3 align={\"center\"}>Validating session...</h3>;\n        if (!authenticated) {\n          return (\n            <div>\n              Not authenticated, please <Link to=\"/login\">Login</Link> or{\" \"}\n              <Link to=\"/register\">Register</Link>\n            </div>\n          );\n        }\n        return (\n          <Component\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n          />\n        );\n      }}\n    />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\nimport Home from \"./pages/Home/Home\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport Backlog from \"./pages/Backlog/Backlog\";\nimport ActiveSprint from \"./pages/ActiveSprint/ActiveSprint\";\nimport Header from \"./components/Header/Header\";\nimport Register from \"./pages/Register/Register\";\nimport Login from \"./pages/Login/Login\";\nimport AUTH from \"./utils/AUTH\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute/ProtectedRoute\";\n\nexport default function App() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  const checkAuth = () => {\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n        setUser({\n          firstName: res.data.firstName,\n          lastName: res.data.lastName,\n          id: res.data.id\n        });\n      } else {\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n  };\n\n  useEffect(() => {\n    checkAuth();\n    setLoading(false);\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <Header\n          authenticated={authenticated}\n          setAuthenticated={setAuthenticated}\n          setUser={setUser}\n        />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home\n              authenticated={authenticated}\n              setAuthenticated={setAuthenticated}\n            />\n          </Route>\n          <ProtectedRoute\n            path=\"/dashboard\"\n            user={user}\n            setUser={setUser}\n            component={Dashboard}\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n            loading={loading}\n            setLoading={setLoading}\n          />\n          <ProtectedRoute\n            path=\"/backlog\"\n            component={Backlog}\n            user={user}\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n            loading={loading}\n            setLoading={setLoading}\n          />\n          <ProtectedRoute\n            path=\"/activesprint\"\n            component={ActiveSprint}\n            user={user}\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n            loading={loading}\n            setLoading={setLoading}\n          />\n          <Route path=\"/register\">\n            <Register\n              authenticated={authenticated}\n              setAuthenticated={setAuthenticated}\n            />\n          </Route>\n          <Route path=\"/login\">\n            <Login\n              authenticated={authenticated}\n              setAuthenticated={setAuthenticated}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}