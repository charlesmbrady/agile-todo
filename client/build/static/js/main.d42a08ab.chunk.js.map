{"version":3,"sources":["utils/API.js","pages/Home/MySketch.js","pages/Home/Home.js","utils/AUTH.js","pages/Dashboard/Dashboard.js","pages/Backlog/modals/CreateSprint.js","pages/Backlog/modals/CreateTodo.js","pages/Backlog/modals/EditTodo.js","components/TodoListItem/TodoListItem.js","pages/Backlog/Backlog.js","components/TodoCard/TodoCard.js","pages/ActiveSprint/modals/EditTodo.js","pages/ActiveSprint/ActiveSprint.js","components/Header/Header.js","pages/Register/Register.js","pages/Login/Login.js","ProtectedRoute/ProtectedRoute.js","serviceWorker.js","index.js","App.js"],"names":["ping","axios","get","catch","err","getAllTodos","userId","getAllSprints","createTodo","todo","post","updateTodo","put","createSprint","sprint","updateSprint","createEvent","event","getEventsBySprintId","sprintId","getBurnupData","MySketch","useState","x","setx","y","men","setMen","drawAll","p5","forEach","man","ellipse","xPos","yPos","drawMen","spawn","newMan","Math","floor","random","menTemp","push","setup","canvasParentRef","createCanvas","parent","frameRate","draw","background","onClick","num","setTimeout","console","log","goLeft","Home","API","then","response","login","user","signup","checkToken","logout","Dashboard","setAuthenticated","sprints","setSprints","labels","datasets","label","data","setData","useEffect","AUTH","res","status","id","sprintsResponse","className","options","responsive","reverse","filter","map","_id","name","CreateSprint","isOpen","toggle","setName","startDate","setStartDate","endDate","setEndDate","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","type","value","onChange","e","target","placeholder","ModalFooter","Button","color","sprintResponse","CreateTodo","updateTodosList","subject","setSubject","description","setDescription","priority","setPriority","points","setPoints","Row","form","Col","md","todoResponse","EditTodo","sprintsList","setSprint","newTodo","TodoListItem","setTodo","tr","initial","animate","transition","duration","Backlog","hasActiveSprint","setUser","todosList","setTodosList","setSprintsList","createSprintModal","setCreateSprintModal","createTodoModal","setCreateTodoModal","editTodoModal","backlogTodos","undefined","length","toggleCreateSprintModal","toggleCreateTodoModal","getSprints","a","getTodos","firstName","lastName","i","sprintPoints","format","startSprint","Table","key","hover","TodoCard","div","totalPoints","completedPoints","setStatus","parseInt","eventResponse","ActiveSprint","redirect","setRedirect","todosTotalPoints","todosCompletedPoints","activeSprint","todos","to","renderRedirect","tempSprint","Date","now","createdDate","lastUpdateDate","projectedPoints","active","sprintUpdateResponse","endSprint","Header","authenticated","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","Register","setFirstName","setLastName","username","setUsername","password","setPassword","data-test","handleSignup","Login","handleLogin","ProtectedRoute","Component","component","path","loading","render","align","Boolean","window","location","hostname","match","ReactDOM","setLoading","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d42a08ab.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  ping: function() {\n    return axios.get(\"/api/ping\").catch(err => {\n      throw err;\n    });\n  },\n  getAllTodos: function(userId) {\n    return axios.get(`/api/todos/user/${userId}`).catch(err => {\n      throw err;\n    });\n  },\n  getAllSprints: function(userId) {\n    return axios.get(`/api/sprints/user/${userId}`).catch(err => {\n      throw err;\n    });\n  },\n  createTodo: function(todo) {\n    return axios.post(`/api/todos`, todo).catch(err => {\n      throw err;\n    });\n  },\n  updateTodo: function(todo) {\n    return axios.put(`/api/todos`, todo).catch(err => {\n      throw err;\n    });\n  },\n  createSprint: function(sprint) {\n    return axios.post(`/api/sprints`, sprint).catch(err => {\n      throw err;\n    });\n  },\n  updateSprint: function(sprint) {\n    return axios.put(`/api/sprints`, sprint).catch(err => {\n      throw err;\n    });\n  },\n  createEvent: function(event) {\n    return axios.post(`/api/events`, event).catch(err => {\n      throw err;\n    });\n  },\n  getEventsBySprintId: function(sprintId) {\n    return axios.get(`/api/events/sprint/${sprintId}`).catch(err => {\n      throw err;\n    });\n  },\n  getBurnupData: function(sprintId) {\n    return axios.get(`/api/events/burnup/${sprintId}`).catch(err => {\n      throw err;\n    });\n  }\n};\n","import React, { useState } from \"react\";\nimport Sketch from \"react-p5\";\n\nexport default function MySketch() {\n  const [x, setx] = useState(50);\n  const [y, sety] = useState(50);\n  const [men, setMen] = useState([]);\n\n  const left = () => {\n    setx(x - 1);\n  };\n  const goLeft = () => {\n    let num = 0;\n    while (num < 50) {\n      setTimeout(function() {\n        console.log(num);\n        num++;\n      }, 3000);\n    }\n  };\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(500, 500).parent(canvasParentRef);\n    p5.frameRate(30);\n  };\n  const draw = p5 => {\n    p5.background(50, 45, 230, 50);\n    p5.ellipse(x, y, 10, 10);\n    // NOTE: Do not use setState in draw function or in functions that is executed in draw function... pls use normal variables or class properties for this purposes\n    // x++;\n    // men.forEach(man => {\n    //   p5.ellipse(man.xPos, man.yPos, 20, 20);\n    // });\n    // drawMen(p5);\n    drawAll(p5);\n  };\n  const drawMen = p5 => {\n    men.forEach(man => {\n      p5.ellipse(man.xPos, man.yPos, 20, 20);\n    });\n  };\n  const drawAll = p5 => {\n    drawMen(p5);\n  };\n  const spawn = p5 => {\n    function newXPos() {\n      return Math.floor(Math.random() * 250);\n    }\n    function newYPos() {\n      return Math.floor(Math.random() * 250);\n    }\n    function newMan() {\n      let newMan = {\n        xPos: newXPos(),\n        yPos: newYPos()\n      };\n      const menTemp = [...men];\n      menTemp.push(newMan);\n      setMen(menTemp);\n    }\n    newMan();\n  };\n\n  return (\n    <div>\n      <Sketch setup={setup} draw={draw} spawn={spawn} />\n      <div>\n        <button onClick={() => left()}>left</button>\n        <button onClick={() => spawn()}>spawn</button>\n        <button onClick={() => goLeft()}>go</button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport API from \"../../utils/API.js\";\nimport MySketch from \"./MySketch.js\";\n\nexport default function Home() {\n  const ping = () => {\n    API.ping().then(response => {\n      console.log(response);\n    });\n  };\n  return (\n    <div>\n      <h2>Create and manage your todos list using \"agile\" methodologies</h2>\n      <MySketch />\n      <p> put starter info here </p>\n      <button onClick={() => ping()}>Ping</button>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport default {\n  // Logs the user out\n  //   logout: function() {\n  //     localStorage.clear();\n  //   },\n  // Log the user in\n  login: function(user) {\n    return axios.post(\"/auth/authenticate\", user).catch(err => {\n      throw err;\n    });\n  },\n  // New user registration\n  signup: function(user) {\n    return axios.post(\"/auth/register\", user);\n  },\n  checkToken: function() {\n    return axios.get(\"/auth/checkToken\").catch(err => {\n      throw err;\n    });\n  },\n  logout: function() {\n    return axios.get(\"/auth/logout\").catch(err => {\n      throw err;\n    });\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport AUTH from \"../../utils/AUTH\";\nimport API from \"../../utils/API\";\n// import Moment from \"react-moment\";\nimport { Line } from \"react-chartjs-2\";\n\nexport default function Dashboard({ setAuthenticated }) {\n  const [events, setEvents] = useState([]);\n  const [sprints, setSprints] = useState([]);\n  const [data, setData] = useState({\n    labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n    datasets: [\n      {\n        label: \"Burn\",\n        data: [0, 2, 2, 3, 3, 5]\n      }\n    ]\n  });\n\n  useEffect(() => {\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        API.getAllSprints(res.data.id).then(sprintsResponse => {\n          setSprints(sprintsResponse.data);\n        });\n      } else {\n        setAuthenticated(false);\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const getBurnup = id => {\n    API.getBurnupData(id).then(response => {\n      let dataValues = [];\n      setData({\n        labels: response.data.labels,\n        datasets: [\n          {\n            label: \"Burnup\",\n            data: response.data.data\n          }\n        ]\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"chart\">\n        <Line\n          data={data}\n          options={{\n            responsive: true\n          }}\n        />\n      </div>\n      <div>\n        {sprints\n          .reverse()\n          .filter(sprint => sprint.status !== \"notStarted\")\n          .map(sprint => (\n            <div onClick={() => getBurnup(sprint._id)}>\n              Name: {sprint.name} ID: {sprint._id}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function CreateSprint({ isOpen, toggle, userId }) {\n  const [name, setName] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  const createSprint = () => {\n    const sprint = {\n      name,\n      startDate,\n      endDate,\n      user: userId\n    };\n    API.createSprint(sprint).then(sprintResponse => {\n      if (sprintResponse.status === 200) {\n        toggle();\n      }\n    });\n  };\n\n  return (\n    <Modal className=\"my-modal\" isOpen={isOpen} toggle={toggle}>\n      <ModalHeader className=\"my-modal\" toggle={toggle}>\n        Create Sprint\n      </ModalHeader>\n      <ModalBody className=\"my-modal\">\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n              placeholder=\"\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"startDate\">Start Date</Label>\n            <Input\n              type=\"date\"\n              name=\"startDate\"\n              id=\"startDate\"\n              placeholder=\"date placeholder\"\n              value={startDate}\n              onChange={e => setStartDate(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"endDate\">End Date</Label>\n            <Input\n              type=\"date\"\n              name=\"endDate\"\n              id=\"endDate\"\n              placeholder=\"date placeholder\"\n              value={endDate}\n              onChange={e => setEndDate(e.target.value)}\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter className=\"my-modal\">\n        <Button color=\"primary\" onClick={() => createSprint()}>\n          Submit\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./style.css\";\n// import AUTH from \"../../utils/AUTH\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function CreateTodo({\n  isOpen,\n  toggle,\n  userId,\n  updateTodosList\n}) {\n  const [subject, setSubject] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [priority, setPriority] = useState(null);\n  const [points, setPoints] = useState(null);\n\n  const createTodo = () => {\n    const todo = {\n      subject,\n      description,\n      priority,\n      points,\n      user: userId\n    };\n    API.createTodo(todo).then(todoResponse => {\n      if (todoResponse.status === 200) {\n        toggle();\n      }\n    });\n  };\n\n  return (\n    <Modal className=\"my-modal\" isOpen={isOpen} toggle={toggle}>\n      <ModalHeader className=\"my-modal\" toggle={toggle}>\n        Create Todo\n      </ModalHeader>\n      <ModalBody className=\"my-modal\">\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Subject</Label>\n            <Input\n              type=\"text\"\n              name=\"subject\"\n              id=\"subject\"\n              value={subject}\n              onChange={e => setSubject(e.target.value)}\n              placeholder=\"\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"description\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </FormGroup>\n\n          <Row form>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"priority\">Priority</Label>\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"priority\"\n                  value={priority}\n                  onChange={e => setPriority(e.target.value)}\n                >\n                  <option>Select...</option>\n                  <option>High</option>\n                  <option>Medium</option>\n                  <option>Low</option>\n                </Input>\n              </FormGroup>\n            </Col>\n            <Col md={1}>\n              <FormGroup>\n                <Label for=\"points\">Points</Label>\n                <Input\n                  type=\"number\"\n                  name=\"number\"\n                  id=\"points\"\n                  placeholder=\"\"\n                  value={points}\n                  onChange={e => setPoints(e.target.value)}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n        </Form>\n      </ModalBody>\n      <ModalFooter className=\"my-modal\">\n        <Button color=\"primary\" onClick={() => createTodo()}>\n          Submit\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\n// import \"./style.css\";\n// import AUTH from \"../../utils/AUTH\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function EditTodo({\n  isOpen,\n  toggle,\n  userId,\n  todo,\n  sprintsList\n}) {\n  const [subject, setSubject] = useState(todo.subject);\n  const [description, setDescription] = useState(todo.description);\n  const [priority, setPriority] = useState(todo.priority);\n  const [points, setPoints] = useState(todo.points);\n  const [sprint, setSprint] = useState({});\n\n  const updateTodo = () => {\n    const newTodo = {\n      id: todo._id,\n      subject,\n      type: todo.type,\n      description,\n      priority,\n      points,\n      sprint,\n      status: \"ready\",\n      user: userId\n    };\n\n    API.updateTodo(newTodo).then(todoResponse => {\n      if (todoResponse.status === 200) {\n        toggle(null);\n      }\n    });\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={() => toggle(null)}>\n      <ModalHeader toggle={() => toggle(null)}>Edit Todo</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Subject</Label>\n            <Input\n              type=\"text\"\n              name=\"subject\"\n              id=\"subject\"\n              placeholder=\"\"\n              value={subject}\n              onChange={e => setSubject(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"description\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"priority\">Priority</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"priority\"\n              value={priority}\n              onChange={e => setPriority(e.target.value)}\n            >\n              <option>Select...</option>\n              <option>High</option>\n              <option>Medium</option>\n              <option>Low</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"points\">Points</Label>\n            <Input\n              type=\"number\"\n              name=\"number\"\n              id=\"points\"\n              placeholder=\"\"\n              value={points}\n              onChange={e => setPoints(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"sprint\">Sprint</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"sprint\"\n              value={sprint}\n              onChange={e => setSprint(e.target.value)}\n            >\n              <option value={null}>Add to sprint...</option>\n              {sprintsList\n                .filter(sprint => sprint.status !== \"completed\")\n                .map(sprint => (\n                  <option\n                    value={sprint._id}\n                    onClick={() => setSprint(sprint._id)}\n                  >\n                    {sprint.name}\n                  </option>\n                ))}\n            </Input>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={() => updateTodo()}>\n          Save\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={() => toggle(null)}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import \"./style.css\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport default function TodoListItem({ todo, setTodo }) {\n  return (\n    <motion.tr\n      className=\"todo-list-item\"\n      onClick={setTodo}\n      initial={{ x: 1000 }}\n      animate={{ x: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      {/* <td>{todo.type}</td> */}\n      <td>{todo.subject}</td>\n      <td>{todo.priority}</td>\n      <td>{todo.points}</td>\n    </motion.tr>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport AUTH from \"../../utils/AUTH\";\nimport API from \"../../utils/API.js\";\nimport CreateSprint from \"./modals/CreateSprint\";\nimport CreateTodo from \"./modals/CreateTodo\";\nimport EditTodo from \"./modals/EditTodo\";\nimport Moment from \"react-moment\";\nimport { Table } from \"reactstrap\";\nimport TodoListItem from \"../../components/TodoListItem/TodoListItem\";\n\nexport default function Backlog({ setAuthenticated }) {\n  const [user, setUser] = useState({});\n  const [todo, setTodo] = useState(null);\n  const [sprint, setSprint] = useState(null);\n  const [todosList, setTodosList] = useState([]);\n  const [sprintsList, setSprintsList] = useState([]);\n\n  const [createSprintModal, setCreateSprintModal] = useState(false);\n  const [createTodoModal, setCreateTodoModal] = useState(false);\n  const [editTodoModal] = useState(true);\n  const backlogTodos = todosList.filter(\n    todo => todo.sprint === undefined || null\n  );\n  let hasActiveSprint;\n  sprintsList.filter(sprint => sprint.status === \"inProgress\").length === 0\n    ? (hasActiveSprint = false)\n    : (hasActiveSprint = true);\n\n  const toggleCreateSprintModal = () => {\n    setCreateSprintModal(!createSprintModal);\n  };\n  const toggleCreateTodoModal = () => {\n    setCreateTodoModal(!createTodoModal);\n  };\n  const getSprints = async userId => {\n    API.getAllSprints(userId).then(res => {\n      setSprintsList(res.data);\n    });\n  };\n  const getTodos = async userId => {\n    API.getAllTodos(userId).then(res => {\n      setTodosList(res.data);\n    });\n  };\n  const startSprint = sprint => {\n    sprint.status = \"inProgress\";\n    API.updateSprint(sprint).then(res => {\n      if (res.status === 200) {\n        setSprint({});\n      }\n    });\n  };\n\n  useEffect(() => {\n    //First make a call to get userId to get respective todos\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        setUser({\n          firstName: res.data.firstName,\n          lastName: res.data.lastName,\n          id: res.data.id\n        });\n        // with the userId set, get all the todos and sprints for the user\n        getTodos(res.data.id);\n        getSprints(res.data.id);\n      } else {\n        // if the res.status is not 200, then log the user out.\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n    // eslint-disable-next-line\n  }, [todo, sprint, createSprintModal, createTodoModal, editTodoModal]);\n\n  return (\n    <div className=\"backlog-page-wrapper\">\n      <div className=\"backlog-page-header-wrapper\">\n        <button\n          id=\"create-sprint-button\"\n          className=\"backlog-page-header-item backlog-button btn\"\n          onClick={() => toggleCreateSprintModal()}\n        >\n          Create Sprint\n        </button>\n        <button\n          id=\"create-todo-button\"\n          className=\"backlog-button btn\"\n          onClick={() => toggleCreateTodoModal()}\n        >\n          Create Todo\n        </button>\n      </div>\n      <div className=\"sprints-section\">\n        <h3>Sprints</h3>\n        {sprintsList.filter(sprint => sprint.status !== \"completed\").length ===\n          0 && <div className=\"no-list\">No sprints...</div>}\n        {sprintsList\n          .filter(sprint => sprint.status !== \"completed\")\n          .map((sprint, i) => {\n            {\n              var sprintPoints = 0;\n              todosList.forEach(todo => {\n                if (todo.sprint === sprint._id) {\n                  sprintPoints += todo.points;\n                }\n              });\n            }\n            return (\n              <div className=\"sprint-wrapper\">\n                <div className=\"sprint-header-wrapper\">\n                  <h6 className=\"sprint-header-item sprint-name\">\n                    {sprint.name}\n                  </h6>\n                  <div className=\"sprint-header-item\">\n                    <div className=\"sprint-date\">\n                      <Moment format=\"MMM DD\">{sprint.startDate}</Moment> -{\" \"}\n                      <Moment format=\"MMM DD\">{sprint.endDate}</Moment>\n                    </div>\n                  </div>\n                  <div className=\"sprint-header-item sprint-points\">\n                    {sprintPoints} points\n                  </div>\n                  {hasActiveSprint === false && i === 0 && (\n                    <button\n                      id=\"start-sprint-button\"\n                      onClick={() => startSprint(sprint)}\n                    >\n                      Start Sprint\n                    </button>\n                  )}\n                </div>\n                <div className=\"sprint-body\">\n                  {todosList.filter(todo => todo.sprint === sprint._id)\n                    .length === 0 && (\n                    <div className=\"no-list\">\n                      No todos for this sprint yet...\n                    </div>\n                  )}\n                  <Table responsive>\n                    <tbody>\n                      {todosList\n                        .filter(todo => todo.sprint === sprint._id)\n                        .map((todo, i) => (\n                          <TodoListItem\n                            todo={todo}\n                            key={i}\n                            setTodo={() => setTodo(todo)}\n                          />\n                        ))}\n                    </tbody>\n                  </Table>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n\n      <div className=\"backlog-todos-wrapper\">\n        <div className=\"backlog-todos-header-wrapper\">\n          <h3>Backlog</h3>\n        </div>\n        <div className=\"backlog-todos-body-wrapper\">\n          {backlogTodos.length === 0 && (\n            <div className=\"no-list\">No todos in backlog...</div>\n          )}\n          <Table responsive hover>\n            <tbody>\n              {todosList\n                .filter(todo => todo.sprint === undefined || null)\n                .map((todo, i) => (\n                  <TodoListItem\n                    todo={todo}\n                    key={i}\n                    setTodo={() => setTodo(todo)}\n                  />\n                ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n\n      {/* _______________________________________ MODALS _______________________________________ */}\n      {createTodoModal && (\n        <CreateTodo\n          isOpen={createTodoModal}\n          toggle={toggleCreateTodoModal}\n          userId={user.id}\n        />\n      )}\n      {todo && (\n        <EditTodo\n          isOpen={editTodoModal}\n          toggle={setTodo}\n          userId={user.id}\n          todo={todo}\n          sprintsList={sprintsList}\n        />\n      )}\n      {createSprintModal && (\n        <CreateSprint\n          isOpen={createSprintModal}\n          toggle={toggleCreateSprintModal}\n          userId={user.id}\n        />\n      )}\n    </div>\n  );\n}\n","import \"./style.css\";\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\n\nexport default function TodoCard({ todo, setTodo }) {\n  return (\n    <motion.div\n      className=\"todo-card-wrapper\"\n      initial={{ y: 1000 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"todo-card-body-wrapper\" onClick={setTodo}>\n        <h5>{todo.subject}</h5>\n      </div>\n      <div className=\"todo-card-footer-wrapper\">\n        <p className=\"todo-card-footer-item\">Points: {todo.points}</p>\n        <p className=\"todo-card-footer-item\">Priority: {todo.priority}</p>\n      </div>\n    </motion.div>\n  );\n}\n","import React, { useState } from \"react\";\nimport API from \"../../../utils/API\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default function EditTodo({\n  isOpen,\n  toggle,\n  userId,\n  todo,\n  sprintId,\n  totalPoints,\n  completedPoints\n  // updateTodosList\n}) {\n  const [subject, setSubject] = useState(todo.subject);\n  const [description, setDescription] = useState(todo.description);\n  const [priority, setPriority] = useState(todo.priority);\n  const [points, setPoints] = useState(todo.points);\n  const [status, setStatus] = useState(todo.status);\n  const [sprint] = useState(sprintId);\n\n  const updateTodo = () => {\n    const newTodo = {\n      id: todo._id,\n      subject,\n      type: todo.type,\n      description,\n      priority,\n      points,\n      sprint,\n      user: userId,\n      status\n    };\n\n    API.updateTodo(newTodo).then(todoResponse => {\n      if (todoResponse.status === 200) {\n        // updateTodosList(todoResponse.data);\n        //make api call to insert the todo id into the todos array on the sprint if the sprint is there\n        // ***********************************\n        // *********************************\n        // what if i do this on the backend in the update todo controller\n\n        let newCompletedPoints = parseInt(completedPoints) + parseInt(points);\n        const event = {\n          type: \"todo completed\",\n          completedPoints: newCompletedPoints,\n          totalPoints: totalPoints,\n          sprint: sprint\n        };\n        if (status === \"completed\") {\n          API.createEvent(event).then(eventResponse => {\n            console.log(eventResponse.data);\n          });\n        }\n\n        toggle(null);\n      }\n    });\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={() => toggle(null)}>\n      <ModalHeader toggle={() => toggle(null)}>Edit Todo</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for=\"subject\">Subject</Label>\n            <Input\n              type=\"text\"\n              name=\"subject\"\n              id=\"subject\"\n              placeholder=\"\"\n              value={subject}\n              onChange={e => setSubject(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"description\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"priority\">Priority</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"priority\"\n              value={priority}\n              onChange={e => setPriority(e.target.value)}\n            >\n              <option>High</option>\n              <option>Medium</option>\n              <option>Low</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"points\">Points</Label>\n            <Input\n              type=\"number\"\n              name=\"number\"\n              id=\"points\"\n              placeholder=\"\"\n              value={points}\n              onChange={e => setPoints(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"status\">Status</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"status\"\n              value={status}\n              onChange={e => setStatus(e.target.value)}\n            >\n              <option>Select status</option>\n              <option value=\"ready\" onClick={e => setStatus(e.target.value)}>\n                Ready\n              </option>\n              <option value=\"working\" onClick={e => setStatus(e.target.value)}>\n                Working\n              </option>\n              <option\n                value=\"completed\"\n                onClick={e => setStatus(e.target.value)}\n              >\n                Completed\n              </option>\n              ))}\n            </Input>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={() => updateTodo()}>\n          Save\n        </Button>{\" \"}\n        <Button color=\"secondary\" onClick={() => toggle(null)}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport AUTH from \"../../utils/AUTH\";\nimport API from \"../../utils/API\";\nimport TodoCard from \"../../components/TodoCard/TodoCard\";\nimport EditTodo from \"./modals/EditTodo\";\nimport Moment from \"react-moment\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default function ActiveSprint({ setAuthenticated }) {\n  const [user, setUser] = useState({});\n  const [todo, setTodo] = useState(null);\n  const [todosList, setTodosList] = useState([]);\n  const [sprint, setSprint] = useState({});\n  const [redirect, setRedirect] = useState(false);\n\n  let todosTotalPoints = 0;\n  let todosCompletedPoints = 0;\n\n  todosList.forEach(todo => {\n    if (todo.status === \"completed\") {\n      todosCompletedPoints += parseInt(todo.points);\n    }\n    todosTotalPoints += parseInt(todo.points);\n  });\n\n  //modal\n  const [editTodoModal] = useState(true);\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/backlog\" />;\n    }\n  };\n\n  const endSprint = () => {\n    const tempSprint = {\n      // todos: [],\n      status: \"completed\",\n      endDate: Date.now(),\n      user: sprint.user,\n      name: sprint.name,\n      createdDate: sprint.createdDate,\n      lastUpdateDate: Date.now(),\n      startDate: sprint.startDate,\n      projectedPoints: todosTotalPoints,\n      completedPoints: todosCompletedPoints,\n      active: false,\n      _id: sprint._id\n    };\n    API.updateSprint(tempSprint).then(sprintUpdateResponse => {\n      setRedirect(true);\n\n      const event = {\n        type: \"sprint ended\",\n        completedPoints: todosCompletedPoints,\n        totalPoints: todosTotalPoints,\n        sprint: sprint\n      };\n      API.createEvent(event).then(eventResponse => {\n        console.log(eventResponse.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    //First make a call to get userId to get respective todos\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        setUser({\n          firstName: res.data.firstName,\n          lastName: res.data.lastName,\n          id: res.data.id\n        });\n        // with the userId set, get all the todos for the user\n        API.getAllSprints(res.data.id).then(sprintsResponse => {\n          const activeSprint = sprintsResponse.data.filter(\n            sprint => sprint.status === \"inProgress\"\n          );\n          if (activeSprint[0]) {\n            setSprint(activeSprint[0]);\n            setTodosList(activeSprint[0].todos);\n          } else {\n            setRedirect(true);\n          }\n        });\n        //need to get all todos in the active sprint and put them in one Todos list, and render them in swim lanes based on status\n        // whenever the state of the todoslist is updated, rerender the swim lanes\n      } else {\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n    // eslint-disable-next-line\n  }, [todo]);\n\n  return (\n    <div>\n      {renderRedirect()}\n      {/* <h1>ActiveSprint</h1> */}\n      <div className=\"active-sprint-header-wrapper\">\n        <h5 className=\"active-sprint-header-item\">\n          {sprint.name}{\" \"}\n          <span className=\"dates\">\n            <Moment format=\"MMM DD\">{sprint.startDate}</Moment> -{\" \"}\n            <Moment format=\"MMM DD\">{sprint.endDate}</Moment>\n          </span>\n        </h5>{\" \"}\n        <h5 className=\"active-sprint-header-item points\">\n          {todosCompletedPoints}/{todosTotalPoints} points completed\n        </h5>{\" \"}\n        <button\n          className=\"active-sprint-header-item\"\n          id=\"end-sprint-button\"\n          onClick={() => endSprint()}\n        >\n          End Sprint\n        </button>\n      </div>\n      <div className=\"container-fluid\">\n        <div className=\"swim-lanes-wrapper row\">\n          <div className=\"swim-lane-wrapper col-md-4\">\n            <div className=\"swim-lane-header-wrapper\">\n              <h5 className=\"swim-lane-header\">Ready</h5>\n            </div>\n            <div className=\"swim-lane-body-wrapper\">\n              {todosList\n                .filter(todo => todo.status === \"ready\")\n                .map(todo => (\n                  <TodoCard todo={todo} setTodo={() => setTodo(todo)} />\n                ))}\n            </div>\n          </div>\n          <div className=\"swim-lane-wrapper col-md-4\">\n            <div className=\"swim-lane-header-wrapper\">\n              <h5 className=\"swim-lane-header\">Working</h5>\n            </div>\n            <div className=\"swim-lane-body-wrapper\">\n              {todosList\n                .filter(todo => todo.status === \"working\")\n                .map(todo => (\n                  <TodoCard todo={todo} setTodo={() => setTodo(todo)} />\n                ))}\n            </div>\n          </div>\n          <div className=\"swim-lane-wrapper col-md-4\">\n            <div className=\"swim-lane-header-wrapper\">\n              <h5 className=\"swim-lane-header\">Completed</h5>\n            </div>\n            <div className=\"swim-lane-body-wrapper other\">\n              {todosList\n                .filter(todo => todo.status === \"completed\")\n                .map(todo => (\n                  <TodoCard todo={todo} setTodo={() => setTodo(todo)} />\n                ))}\n            </div>\n          </div>\n        </div>\n\n        {todo && (\n          <EditTodo\n            isOpen={editTodoModal}\n            toggle={setTodo}\n            userId={user.id}\n            todo={todo}\n            sprintId={sprint._id}\n            totalPoints={todosTotalPoints}\n            completedPoints={todosCompletedPoints}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import \"./style.css\";\nimport React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport AUTH from \"../../utils/AUTH\";\n\nexport default function Header({ authenticated, setAuthenticated, setUser }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [redirect] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const logout = () => {\n    AUTH.logout().then(res => {\n      if (res.status === 200) {\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n  };\n\n  return (\n    <div className=\"mynav\">\n      {renderRedirect()}\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand className=\"nav-text\" href=\"/\">\n          Agile Todos\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {!authenticated && (\n              <Link to=\"/register\">\n                <NavItem>\n                  <NavLink className=\"nav-text\">Register</NavLink>\n                </NavItem>\n              </Link>\n            )}\n            {!authenticated && (\n              <Link to=\"/login\">\n                <NavItem>\n                  <NavLink className=\"nav-text\">Login</NavLink>\n                </NavItem>\n              </Link>\n            )}\n\n            {authenticated && (\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret className=\"nav-text\">\n                  Menu\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <Link to=\"/dashboard\">\n                    <DropdownItem className=\"nav-text\">Dashboard</DropdownItem>\n                  </Link>\n                  <Link to=\"/backlog\">\n                    <DropdownItem className=\"nav-text\">Backlog</DropdownItem>\n                  </Link>\n                  <Link to=\"/activesprint\">\n                    <DropdownItem className=\"nav-text\">\n                      Active Sprint\n                    </DropdownItem>\n                  </Link>\n                  <DropdownItem divider />\n                  <Link to=\"/\">\n                    <DropdownItem onClick={() => logout()} className=\"nav-text\">\n                      Logout\n                    </DropdownItem>\n                  </Link>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            )}\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport AUTH from \"../../utils/AUTH\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport \"./style.css\";\n\nexport default function Register({ setAuthenticated }) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n  };\n\n  const handleSignup = () => {\n    const user = { firstName, lastName, username, password };\n    AUTH.signup(user).then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n        setRedirect(true);\n      }\n    });\n  };\n  return (\n    <motion.div\n      initial={{ y: 1000 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 1 }}\n      className=\"Signup\"\n    >\n      {renderRedirect()}\n      <h3 className=\"form-header\" data-test=\"signup-header\">\n        Signup\n      </h3>\n\n      <div className=\"form-wrapper\">\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">First Name</h6>\n          <input\n            id=\"first-name\"\n            className=\"form-input\"\n            // placeholder=\"First Name\"\n            name=\"firstName\"\n            data-test=\"signup-input-first-name\"\n            onChange={e => setFirstName(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Last Name</h6>\n          <input\n            id=\"last-name\"\n            className=\"form-input\"\n            // placeholder=\"Last Name\"\n            name=\"lastName\"\n            data-test=\"signup-input-last-name\"\n            onChange={e => setLastName(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Username</h6>\n          <input\n            id=\"username\"\n            className=\"form-input\"\n            // placeholder=\"Email/Username\"\n            name=\"username\"\n            data-test=\"signup-input-username\"\n            onChange={e => setUsername(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Password</h6>\n          <input\n            id=\"password\"\n            className=\"form-input\"\n            // placeholder=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            data-test=\"signup-input-password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n\n        <button\n          data-test=\"signup-submit-button\"\n          id=\"submit-button\"\n          className=\"form-options btn btn-primary\"\n          onClick={() => handleSignup()}\n        >\n          Submit\n        </button>\n        <p className=\"form-options\">\n          Already signed up?{\" \"}\n          <Link to=\"/login\" data-test=\"signup-login-button\" id=\"login-button\">\n            Login\n          </Link>\n        </p>\n      </div>\n    </motion.div>\n  );\n}\n","import React, { useState } from \"react\";\nimport AUTH from \"../../utils/AUTH\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport \"./style.css\";\n\nexport default function Login({ authenticated, setAuthenticated }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const handleLogin = () => {\n    const user = { username, password };\n    AUTH.login(user).then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n        setRedirect(true);\n      }\n    });\n  };\n\n  const renderRedirect = () => {\n    if (redirect) {\n      return <Redirect to=\"/backlog\" />;\n    }\n  };\n\n  return (\n    <motion.div\n      className=\"Login\"\n      initial={{ y: 1000 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 1 }}\n    >\n      {renderRedirect()}\n\n      <h3 className=\"form-header\" data-test=\"login-header\">\n        Login\n      </h3>\n      <div className=\"form-wrapper\">\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Username</h6>\n          <input\n            id=\"username\"\n            className=\"form-input\"\n            // placeholder=\"email/username\"\n            name=\"username\"\n            data-test=\"login-input-username\"\n            onChange={e => setUsername(e.target.value)}\n          />\n        </div>\n        <div className=\"form-element\">\n          <h6 className=\"form-label\">Password</h6>\n          <input\n            id=\"password\"\n            // placeholder=\"password\"\n            className=\"form-input\"\n            name=\"password\"\n            type=\"password\"\n            data-test=\"login-input-password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n        </div>\n        <button\n          data-test=\"login-submit-button\"\n          id=\"login-button\"\n          className=\"form-button form-options btn btn-primary\"\n          onClick={() => handleLogin()}\n        >\n          Submit\n        </button>\n        <p className=\"form-options\">\n          Not registered yet?{\" \"}\n          <Link\n            to=\"/register\"\n            data-test=\"login-signup-button\"\n            id=\"signup-button\"\n          >\n            Register\n          </Link>\n        </p>\n        {/* <button\n        data-test=\"login-signup-button\"\n        id=\"signup-button\"\n        className=\"authentication options btn btn-secondary\"\n      >\n        Signup\n      </button> */}\n      </div>\n    </motion.div>\n  );\n}\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nexport default function ProtectedRoute({\n  component: Component,\n  path,\n  loading,\n  authenticated,\n  setAuthenticated\n}) {\n  return (\n    <Route\n      path={path}\n      render={() => {\n        if (loading) return <h3 align={\"center\"}>Validating session...</h3>;\n        if (!authenticated) {\n          return (\n            <div>\n              Not authenticated, please <Link to=\"/login\">Login</Link> or{\" \"}\n              <Link to=\"/register\">Register</Link>\n            </div>\n          );\n        }\n        return (\n          <Component\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n          />\n        );\n      }}\n    />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\nimport Home from \"./pages/Home/Home\";\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\nimport Backlog from \"./pages/Backlog/Backlog\";\nimport ActiveSprint from \"./pages/ActiveSprint/ActiveSprint\";\nimport Header from \"./components/Header/Header\";\nimport Register from \"./pages/Register/Register\";\nimport Login from \"./pages/Login/Login\";\nimport AUTH from \"./utils/AUTH\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute/ProtectedRoute\";\n\nexport default function App() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  const checkAuth = () => {\n    AUTH.checkToken().then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n        setUser({\n          firstName: res.data.firstName,\n          lastName: res.data.lastName,\n          id: res.data.id\n        });\n      } else {\n        setAuthenticated(false);\n        setUser({});\n      }\n    });\n  };\n\n  useEffect(() => {\n    checkAuth();\n    setLoading(false);\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <Header\n          authenticated={authenticated}\n          setAuthenticated={setAuthenticated}\n          setUser={setUser}\n        />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home\n              authenticated={authenticated}\n              setAuthenticated={setAuthenticated}\n            />\n          </Route>\n          <ProtectedRoute\n            path=\"/dashboard\"\n            user={user}\n            setUser={setUser}\n            component={Dashboard}\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n            loading={loading}\n            setLoading={setLoading}\n          />\n          <ProtectedRoute\n            path=\"/backlog\"\n            component={Backlog}\n            user={user}\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n            loading={loading}\n            setLoading={setLoading}\n          />\n          <ProtectedRoute\n            path=\"/activesprint\"\n            component={ActiveSprint}\n            user={user}\n            authenticated={authenticated}\n            setAuthenticated={setAuthenticated}\n            loading={loading}\n            setLoading={setLoading}\n          />\n          <Route path=\"/register\">\n            <Register\n              authenticated={authenticated}\n              setAuthenticated={setAuthenticated}\n            />\n          </Route>\n          <Route path=\"/login\">\n            <Login\n              authenticated={authenticated}\n              setAuthenticated={setAuthenticated}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}